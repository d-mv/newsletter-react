{"version":3,"sources":["containers/Sources/SourceCreate/SourceCreate.module.scss","components/Sources/SourceCard.module.scss","components/NavMenu/NavMenuElement.module.scss","components/TitleBar/TitleBar.module.scss","containers/Posts/PostButton/PostButton.module.scss","containers/Sources/SourcesList.module.scss","containers/Posts/PostCardList.module.scss","components/NavMenu/NavMenu.module.scss","components/TitleBar/DateTime.js","components/TitleBar/TitleBar.js","actions/index.js","containers/Posts/PostButton/PostButton.js","modules/date_time.js","containers/Posts/PostCard.js","containers/Posts/PostCardList.js","containers/Sources/SourceButton/SourceButton.js","components/Sources/SourceCard.js","containers/Sources/SourceCreate/SourceCreate.js","containers/Sources/SourcesList.js","components/Posts/PostShow.js","components/ContentDisplay.js","components/NavMenu/NavMenuElement.js","components/NavMenu/NavMenu.js","components/App/App.js","serviceWorker.js","index.js","reducers/posts_reducer.js","reducers/sources_reducer.js","reducers/add_source_reducer.js","reducers/update_post_reducer.js","reducers/select_post_reducer.js","reducers/source_create_module_reducer.js","containers/Posts/PostCard.module.scss","components/Posts/PostShow.module.scss"],"names":["module","exports","createForm","createFields","labelTitle","section","name","url","element","elementArrow","button","buttonArrow","newsletterHead","title","timeStamp","on","addSource","content","contentFlex","menu","currentTimestamp","props","hours","d","Date","minutes","getMinutes","toString","length","ampm","getHours","getDay","getMonth","getDate","getFullYear","TitleBar","react_default","a","createElement","className","styles","id","DateTime","React","Component","postUrl","process","setPosts","type","payload","fetch","concat","then","r","json","updatePost","query","method","headers","Accept","Content-Type","body","JSON","stringify","action","fields","console","log","setSources","selectPost","postId","PostButton","flag","_this","value","buttonStyle","this","style","regular","delete","onClick","connect","state","dispatch","bindActionCreators","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateTime","dateFromDb","timeToDisplay","PostCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","selector","post","_id","bind","assertThisInitialized","text","replace","bodyClass","read","bodyRead","publishedDate","published","key","secondLine","source","Posts_PostButton_PostButton","star","dangerouslySetInnerHTML","__html","statusLine","readTime","divider","PostCardList","fetchMessages","selectPostToShow","showPost","refresher","setInterval","clearInterval","_this2","posts","map","Posts_PostCard","selectModule","SourceButton","SourceCard","nameWrapper","goHome","buttonsWrapper","Sources_SourceButton_SourceButton","SourceCreate","homepage","handleChange","handleSubmit","event","change","target","setState","preventDefault","values","home","toggle","create","onSubmit","input","onChange","submit","as","SourcesList","showAddSource","toggleAddSource","fetchSources","createSource","request","Sources_SourceCreate_SourceCreate","sources","Sources_SourceCard","PostShow","window","open","author","parsedDate","parsed","pages","ContentDisplay","setPostToShow","show","Posts_PostCardList","Posts_PostShow","Sources_SourcesList","NavMenuElement","NavMenu","NavMenu_NavMenuElement","App","showModule","TitleBar_TitleBar","components_ContentDisplay","components_NavMenu_NavMenu","Boolean","location","hostname","match","WebFont","load","google","families","reducers","combineReducers","arguments","undefined","sourceCreateModule","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxPromise","logger","ReactDOM","render","es","store","createStore","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","bodyFlex"],"mappings":"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","file":"static/js/main.c9c0aa73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createForm\":\"SourceCreate_createForm__2KrBN\",\"createFields\":\"SourceCreate_createFields__8F5Ek\",\"labelTitle\":\"SourceCreate_labelTitle__3LPuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SourceCard_section__hWmMe\",\"name\":\"SourceCard_name__327TD\",\"url\":\"SourceCard_url__59iZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"NavMenuElement_element__3XeYF\",\"elementArrow\":\"NavMenuElement_elementArrow__29-0h\",\"button\":\"NavMenuElement_button__1qALZ\",\"buttonArrow\":\"NavMenuElement_buttonArrow__1nY71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsletterHead\":\"TitleBar_newsletterHead__Zupct\",\"title\":\"TitleBar_title__3MWB3\",\"timeStamp\":\"TitleBar_timeStamp__wN8_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"on\":\"PostButton_on__dfo7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addSource\":\"SourcesList_addSource__qePJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostCardList_content__15L4_\",\"contentFlex\":\"PostCardList_contentFlex__2hHWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavMenu_menu__1haFk\"};","const currentTimestamp = props => {\n  var hours = 0;\n  var d = new Date(),\n    minutes =\n      d.getMinutes().toString().length === 1\n        ? '0' + d.getMinutes()\n        : d.getMinutes(),\n    ampm = d.getHours() >= 12 ? 'pm' : 'am',\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ],\n    days = [\n      'Sunday',\n      'Monday',\n      'Tueday',\n      'Wedday',\n      'Thuday',\n      'Friday',\n      'Saturday'\n    ];\n  if (d.getHours() === 0) {\n    hours = 12;\n  } else if (d.getHours() > 12) {\n    hours = d.getHours() - 12;\n  } else {\n    hours = d.getHours();\n  }\n  return (\n    days[d.getDay()] +\n    ', ' +\n    months[d.getMonth()] +\n    ' ' +\n    d.getDate() +\n    ', ' +\n    d.getFullYear() +\n    ' | ' +\n    hours +\n    ':' +\n    minutes +\n    ampm\n  );\n};\n\nexport default currentTimestamp;\n","import React from 'react';\n\nimport DateTime from './DateTime';\nimport styles from './TitleBar.module.scss';\n\nexport default class TitleBar extends React.Component {\n  render() {\n    return (\n      <header className={styles.newsletterHead}>\n        <div className={styles.title} id=\"title\">\n          The Newsletter\n        </div>\n        <time className={styles.timeStamp}>\n          <DateTime />\n        </time>\n      </header>\n    );\n  }\n}\n","const postUrl = process.env.REACT_APP_API_URL;\n\nexport function setPosts() {\n  const promise = fetch(`${postUrl}/list`).then(r => r.json());\n  return {\n    type: 'SET_POSTS',\n    payload: promise\n  };\n}\nexport function updatePost(query) {\n  const postUrl = process.env.REACT_APP_API_URL;\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: query.id,\n      action: 'update',\n      fields: query.fields\n    })\n  }).then(r => console.log(`server reply for update: ${r.json()}`));\n\n  return {\n    type: 'UPDATE_POST',\n    payload: promise\n  };\n}\nexport function addSource(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      action: query.action,\n      id: query.id || '',\n      fields: query.fields\n    })\n  }).then(r => r.json());\n\n  return {\n    type: 'ADD_SOURCE',\n    payload: promise\n  };\n}\n\nexport function setSources() {\n  const promise = fetch(`${postUrl}/sources`).then(r => r.json());\n  return {\n    type: 'SET_SOURCES',\n    payload: promise\n  };\n}\n\nexport function selectPost(postId) {\n  const promise = fetch(`${postUrl}/post/${postId}`).then(r => r.json());\n  return {\n    type: 'SELECT_POST',\n    payload: promise\n  };\n}\n\n// export function selectModule(module) {\n//   return {\n//     type: 'SELECT_MODULE',\n//     payload: module\n//   };\n// }\n\nexport function sourceCreateModule(status) {\n  return {\n    type: 'SHOW_MODULE',\n    payload: status\n  };\n}\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { updatePost } from '../../../actions';\n\nimport style from './PostButton.module.scss';\n\nclass PostButton extends React.Component {\n  updatePost = () => {\n    let flag = '';\n    if (this.props.value) {\n      flag = false;\n    } else {\n      flag = true;\n    }\n    const query = { id: this.props.postId, fields: {} };\n    const fields = {};\n    fields[`${this.props.type}`] = flag;\n    query['fields'] = fields;\n    this.props.updatePost(query);\n  };\n\n  render() {\n    let button = '';\n    let buttonStyle = '';\n    switch (this.props.type) {\n      case 'star':\n        button = 'fas fa-star';\n        if (this.props.value) {\n          buttonStyle = style.on;\n        } else {\n          buttonStyle = style.regular;\n        }\n        break;\n      default:\n        button = 'far fa-trash-alt';\n        buttonStyle = style.delete;\n    }\n    return (\n      <button className={buttonStyle} onClick={this.updatePost}>\n        <i className={button} />\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePost: updatePost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    updatePost: state.updatePost\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostButton);\n","const months = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nconst daysOfWeek = {\n  1: 'Sun',\n  2: 'Mon',\n  3: 'Tue',\n  4: 'Wed',\n  5: 'Thu',\n  6: 'Fri',\n  7: 'Sat'\n};\n\nconst dateTime = props => {\n  const dateFromDb = new Date(props);\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from 'react';\n\nimport PostButton from './PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostCard.module.scss';\n\nclass PostCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = () => {\n    this.props.selector(this.props.post._id);\n  };\n\n  render() {\n    const text = `${this.props.post.text.replace(/<(?:.|\\n)*?>/gm, ' ')}...`;\n    let bodyClass = '';\n    if (this.props.post.read) {\n      bodyClass = style.bodyRead;\n    } else {\n      bodyClass = style.body;\n    }\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    return (\n      <article className={bodyClass} key={this.props.post._id}>\n        <header className={style.title} onClick={this.handleClick}>\n          {this.props.post.title}\n        </header>\n        <section className={style.secondLine}>\n          <div className={style.source}>@ {this.props.post.source}</div>\n          <PostButton\n            type=\"star\"\n            value={this.props.post.star}\n            postId={this.props.post._id}\n          />\n        </section>\n        <section\n          className={style.text}\n          onClick={this.handleClick}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <footer className={style.statusLine}>\n          <div>{publishedDate}</div>\n          <div>~ {this.props.post.readTime} mins</div>\n        </footer>\n        <div className={style.divider} />\n      </article>\n    );\n  }\n}\n\nexport default PostCard;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setPosts } from '../../actions';\nimport { selectPost } from '../../actions';\n\nimport PostCard from './PostCard';\nimport style from './PostCardList.module.scss';\n\nclass PostCardList extends React.Component {\n  componentWillMount() {\n    this.fetchMessages();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchMessages, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchMessages = () => {\n    this.props.setPosts();\n  };\n  selectPostToShow = postId => {\n    this.props.selectPost(postId).then(post => this.props.showPost(post));\n  };\n  render() {\n    return (\n      <section className={style.content}>\n        {this.props.posts.map(post => {\n          return (\n            <section key={post._id}>\n              <PostCard selector={this.selectPostToShow} post={post} />\n            </section>\n          );\n        })}\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setPosts, selectPost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCardList);\n","import React from 'react';\n// Redux\n// import { bindActionCreators } from 'redux';\n// import { connect } from 'react-redux';\n// Actions\n// import { updatePost } from '../../../actions';\n\nclass SourceButton extends React.Component {\n  // updatePost = () => {\n  //   let flag = '';\n  //   if (this.props.value) {\n  //     flag = false;\n  //   } else {\n  //     flag = true;\n  //   }\n  //   const query = { id: this.props.postId, fields: {} };\n  //   const fields = {};\n  //   fields[`${this.props.type}`] = flag;\n  //   query['fields'] = fields;\n  //   this.props.updatePost(query);\n  // };\n  render() {\n    let button = '';\n    switch (this.props.type) {\n      case 'edit':\n        button = 'fas fa-pencil-alt';\n        break;\n      case 'add':\n        button = 'fas fa-plus';\n        break;\n      default:\n        button = 'far fa-trash-alt';\n    }\n    return (\n      <button>\n        <i className={button} />\n      </button>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return bindActionCreators({ updatePost: updatePost }, dispatch);\n// };\n\n// const mapStateToProps = state => {\n//   return {\n//     updatePost: state.updatePost\n//   };\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(SourceButton);\nexport default SourceButton;\n","import React from 'react';\n\nimport SourceButton from '../../containers/Sources/SourceButton/SourceButton';\nimport style from './SourceCard.module.scss';\n\nclass SourceCard extends React.Component {\n  goHome() {}\n  render() {\n    return (\n      <section className={style.section}>\n        <section className={style.nameWrapper}>\n          <p onClick={this.goHome} className={style.name}>\n            {this.props.source.name}\n          </p>\n          <p className={style.url}>{this.props.source.url}</p>\n        </section>\n        <section className={style.buttonsWrapper}>\n          <SourceButton type=\"edit\" postId={this.props.source._id} />\n          <SourceButton type=\"delete\" />\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default SourceCard;\n","import React from 'react';\n\nimport style from './SourceCreate.module.scss';\n\nclass SourceCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      url: '',\n      homepage: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let change = {};\n    let field = event.target.name;\n    change[field] = event.target.value;\n    this.setState(change);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const values = {\n      name: event.target[0].value,\n      url: event.target[1].value,\n      home: event.target[2].value\n    };\n    this.props.toggle();\n    this.props.create(values);\n  }\n  render() {\n    console.log(this.props);\n\n    return (\n      <form onSubmit={this.handleSubmit} className={style.createForm}>\n        <label>\n          <div className={style.labelTitle}>Name</div>\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>URL</div>\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>Homepage</div>\n          <input\n            type=\"text\"\n            name=\"home\"\n            value={this.state.home}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button\n          className={style.submit}\n          as=\"input\"\n          type=\"submit\"\n          value=\"Submit\"\n        >\n          Create\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SourceCreate;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setSources } from '../../actions';\nimport { addSource } from '../../actions';\n// import { sourceCreateModule } from \"../../actions\";\n\nimport SourceCard from '../../components/Sources/SourceCard';\nimport SourceButton from './SourceButton/SourceButton';\nimport SourceCreate from './SourceCreate/SourceCreate';\nimport style from './SourcesList.module.scss';\n\nclass SourcesList extends React.Component {\n  state = {\n    showAddSource: false\n  };\n  toggleAddSource = () => {\n    this.setState(state => ({ showAddSource: !this.state.showAddSource }));\n    console.log(this.state.showAddSource);\n  };\n\n  componentWillMount() {\n    this.fetchSources();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchSources, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchSources = () => {\n    this.props.setSources();\n  };\n\n  createSource = fields => {\n    const request = { action: ['source', 'create'], fields };\n    this.props.addSource(request);\n  };\n\n  render() {\n    return (\n      <section className={style.section}>\n        <div className={style.addSource} onClick={this.toggleAddSource}>\n          <SourceButton type=\"add\" />\n          Add Source\n        </div>\n        {this.state.showAddSource ? (\n          <SourceCreate\n            create={this.createSource}\n            toggle={this.toggleAddSource}\n          />\n        ) : null}\n        {this.props.sources.map(source => {\n          return <SourceCard source={source} key={source._id} />;\n        })}\n      </section>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setSources, addSource }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    sources: state.sources,\n    addSource: state.addSource\n    // sourceCreateModule: state.sourceCreateModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SourcesList);\n","import React from 'react';\n\nimport PostButton from '../../containers/Posts/PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostShow.module.scss';\n\nclass PostShow extends React.Component {\n  handleClick = () => {\n    window.open(this.props.post.url, '_blank');\n  };\n\n  render() {\n    let author = '';\n    if (!this.props.post.author) {\n      author = '';\n    } else {\n      author = `by ${this.props.post.author}`;\n    }\n    const text = this.props.post.text;\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    const parsedDate = dateTime(new Date(this.props.post.parsed));\n    // const pages = Math.round(this.props.post.text.length / 3000);\n    return (\n      <article className={style.body}>\n        <header className={style.title} onClick={this.handleClick}>\n          {this.props.post.title}\n        </header>\n        <div className={style.secondLine}>\n          <div className={style.author}>{author}</div>\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.props.post.star}\n              postId={this.props.post._id}\n            />\n            <PostButton type=\"delete\" />\n          </div>\n        </div>\n        <section\n          className={style.text}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <div className={style.divider} />\n        <footer className={style.statusLine}>\n          <div>published: {publishedDate}</div>\n          <div>parsed: {parsedDate}</div>\n          <div>~ {this.props.post.pages} pages</div>\n        </footer>\n      </article>\n    );\n  }\n}\n\nexport default PostShow;\n","import React from 'react';\n\nimport PostCardList from '../containers/Posts/PostCardList';\nimport SourcesList from '../containers/Sources/SourcesList';\nimport PostShow from './Posts/PostShow';\n\nclass ContentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {}\n    };\n  }\n\n  setPostToShow = post => {\n    this.setState({ post: post.payload });\n    this.props.toggle('show');\n  };\n\n  render() {\n    switch (this.props.show) {\n      case 'Home':\n        return (\n          <PostCardList\n            // toggle={this.props.toggle}\n            showPost={this.setPostToShow}\n          />\n        );\n      case 'show':\n        return <PostShow post={this.state.post} />;\n      case 'Sources':\n        return <SourcesList />;\n      default:\n        return <PostCardList />;\n    }\n  }\n}\n\nexport default ContentDisplay;\n","import React from 'react';\n\nimport style from './NavMenuElement.module.scss';\n\nclass NavMenuElement extends React.Component {\n  handleClick = () => {\n    this.props.show(this.props.name);\n  };\n\n  render() {\n    if (this.props.name === 'arrow') {\n      const classStyle = 'fas fa-chevron-left';\n      return (\n        <section className={style.elementArrow} onClick={this.handleClick}>\n          <div className={style.buttonArrow}>\n            <i className={classStyle} />\n          </div>\n        </section>\n      );\n    } else {\n      return (\n        <section className={style.element} onClick={this.handleClick}>\n          <div className={style.button}>{this.props.name}</div>\n        </section>\n      );\n    }\n  }\n}\n\nexport default NavMenuElement;\n","import React from 'react';\n\nimport NavMenuElement from './NavMenuElement';\nimport style from './NavMenu.module.scss';\n\nclass NavMenu extends React.Component {\n  render() {\n    return (\n      <nav className={style.menu}>\n        <NavMenuElement show={this.props.show} name=\"arrow\" />\n        <NavMenuElement show={this.props.show} name=\"Home\" />\n        <NavMenuElement show={this.props.show} name=\"Sources\" />\n      </nav>\n    );\n  }\n}\n\nexport default NavMenu;\n","import React from 'react';\n\nimport TitleBar from '../TitleBar/TitleBar';\nimport ContentDisplay from '../ContentDisplay';\nimport NavMenu from '../NavMenu/NavMenu';\n\nclass App extends React.Component {\n  state = {\n    module: 'Home'\n  };\n  showModule = module => {\n    this.setState(state => ({ module: module }));\n  };\n  render() {\n    return (\n      <main>\n        <TitleBar />\n        <ContentDisplay show={this.state.module} toggle={this.showModule} />\n        <NavMenu show={this.showModule} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\n// reducers\nimport postsReducer from './reducers/posts_reducer';\nimport sourcesReducer from './reducers/sources_reducer';\nimport addSourceReducer from './reducers/add_source_reducer';\nimport updatePostReducer from './reducers/update_post_reducer';\nimport selectPostReducer from './reducers/select_post_reducer';\n// import selectModuleReducer from './reducers/select_module_reducer';\nimport sourceCreateModuleReducer from './reducers/source_create_module_reducer.js';\n\nimport WebFont from 'webfontloader';\n\n// load components\nimport App from './components/App/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: ['Aleo:300,300i,400,400i,700', 'IBM Plex Mono:300,400']\n  }\n});\n\nconst initialState = {\n  posts: [],\n  sources: [],\n  addSource: '',\n  updatePost: '',\n  selectPost: '',\n  // selectModule: 'Home',\n  sourceCreateModule: true\n};\n\n// Define reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  sources: sourcesReducer,\n  addSource: addSourceReducer,\n  updatePost: updatePostReducer,\n  selectPost: selectPostReducer,\n  // selectModule: selectModuleReducer,\n  sourceCreateModule: sourceCreateModuleReducer\n});\n// Add logger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(reduxPromise, logger));\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'ADD_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SHOW_MODULE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostCard_body__3hbvz\",\"bodyFlex\":\"PostCard_bodyFlex__1TYUE\",\"bodyRead\":\"PostCard_bodyRead__1JMP2\",\"title\":\"PostCard_title__131Au\",\"secondLine\":\"PostCard_secondLine__KD5pA\",\"source\":\"PostCard_source__3-ict\",\"text\":\"PostCard_text__2kRll\",\"statusLine\":\"PostCard_statusLine__1d_h8\",\"divider\":\"PostCard_divider__3wj7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostShow_body__1NQ_n\",\"title\":\"PostShow_title__2HfCj\",\"secondLine\":\"PostShow_secondLine__9dJW5\",\"author\":\"PostShow_author__1S4ap\",\"buttonsWrapper\":\"PostShow_buttonsWrapper__10ox5\",\"text\":\"PostShow_text__27vjt\",\"divider\":\"PostShow_divider__zhco3\",\"statusLine\":\"PostShow_statusLine__3higE\"};"],"sourceRoot":""}