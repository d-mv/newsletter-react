{"version":3,"sources":["containers/Sources/SourceCreate/SourceCreate.module.scss","components/Sources/SourceCard.module.scss","components/NavMenu/NavMenuElement.module.scss","components/TitleBar/TitleBar.module.scss","components/Error/Error.module.scss","containers/Posts/PostButton/PostButton.module.scss","containers/Sources/SourcesList.module.scss","containers/Posts/PostCardList.module.scss","components/NavMenu/NavMenu.module.scss","components/TitleBar/DateTime.js","components/TitleBar/TitleBar.js","actions/index.js","containers/Posts/PostButton/PostButton.js","modules/date_time.js","containers/Posts/PostCard.js","components/Error/Error.js","containers/Posts/PostCardList.js","components/Sources/SourceButton/SourceButton.js","components/Sources/SourceCard.js","containers/Sources/SourceCreate/SourceCreate.js","containers/Sources/SourcesList.js","components/Posts/PostShow.js","components/ContentDisplay.js","components/NavMenu/NavMenuElement.js","components/NavMenu/NavMenu.js","components/App/App.js","serviceWorker.js","index.js","reducers/posts_reducer.js","reducers/sources_reducer.js","reducers/add_source_reducer.js","reducers/update_post_reducer.js","reducers/select_post_reducer.js","reducers/source_create_module_reducer.js","containers/Posts/PostCard.module.scss","components/Posts/PostShow.module.scss"],"names":["module","exports","createForm","createFields","labelTitle","section","name","url","element","elementArrow","button","buttonArrow","newsletterHead","title","timeStamp","errorWrapper","errorTitle","error","on","addSource","content","contentFlex","menu","currentTimestamp","props","hours","d","Date","minutes","getMinutes","toString","length","ampm","getHours","getDay","getMonth","getDate","getFullYear","TitleBar","react_default","a","createElement","className","styles","id","DateTime","React","Component","postUrl","setPosts","type","payload","fetch","concat","then","r","json","catch","e","updatePost","query","process","method","headers","Accept","Content-Type","body","JSON","stringify","action","fields","setSources","selectPost","postId","PostButton","_this","value","toggle","buttonStyle","style","this","onClick","connect","state","dispatch","bindActionCreators","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateTime","dateFromDb","Object","keys","timeToDisplay","PostCard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","selector","post","_id","bind","assertThisInitialized","text","replace","bodyClass","read","bodyRead","publishedDate","published","key","secondLine","source","Posts_PostButton_PostButton","star","dangerouslySetInnerHTML","__html","statusLine","readTime","divider","message","PostCardList","fetchMessages","data","selectPostToShow","showPost","refresher","setInterval","window","scrollTo","clearInterval","_this2","posts","Error","map","Posts_PostCard","selectModule","SourceButton","SourceCard","nameWrapper","goHome","buttonsWrapper","Sources_SourceButton_SourceButton","SourceCreate","homepage","handleChange","handleSubmit","event","change","target","setState","preventDefault","values","home","create","console","log","onSubmit","input","onChange","submit","as","SourcesList","showAddSource","toggleAddSource","fetchSources","createSource","request","Sources_SourceCreate_SourceCreate","sources","Sources_SourceCard","PostShow","open","componentDidMount","author","parsedDate","parsed","pages","ContentDisplay","setPostToShow","show","Posts_PostCardList","Posts_PostShow","Sources_SourcesList","NavMenuElement","NavMenu","NavMenu_NavMenuElement","App","showModule","TitleBar_TitleBar","components_ContentDisplay","components_NavMenu_NavMenu","Boolean","location","hostname","match","WebFont","load","google","families","reducers","combineReducers","arguments","undefined","sourceCreateModule","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxPromise","logger","ReactDOM","render","es","store","createStore","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","bodyFlex","signature","book-cta"],"mappings":"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","file":"static/js/main.b5663495.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createForm\":\"SourceCreate_createForm__2KrBN\",\"createFields\":\"SourceCreate_createFields__8F5Ek\",\"labelTitle\":\"SourceCreate_labelTitle__3LPuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SourceCard_section__hWmMe\",\"name\":\"SourceCard_name__327TD\",\"url\":\"SourceCard_url__59iZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"NavMenuElement_element__3XeYF\",\"elementArrow\":\"NavMenuElement_elementArrow__29-0h\",\"button\":\"NavMenuElement_button__1qALZ\",\"buttonArrow\":\"NavMenuElement_buttonArrow__1nY71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsletterHead\":\"TitleBar_newsletterHead__Zupct\",\"title\":\"TitleBar_title__3MWB3\",\"timeStamp\":\"TitleBar_timeStamp__wN8_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__1wrJh\",\"errorTitle\":\"Error_errorTitle__31zwY\",\"error\":\"Error_error__2k7aI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostButton_button__3gCuo\",\"on\":\"PostButton_on__dfo7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addSource\":\"SourcesList_addSource__qePJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostCardList_content__15L4_\",\"contentFlex\":\"PostCardList_contentFlex__2hHWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavMenu_menu__1haFk\"};","const currentTimestamp = props => {\n  var hours = 0;\n  var d = new Date(),\n    minutes =\n      d.getMinutes().toString().length === 1\n        ? '0' + d.getMinutes()\n        : d.getMinutes(),\n    ampm = d.getHours() >= 12 ? 'pm' : 'am',\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ],\n    days = [\n      'Sunday',\n      'Monday',\n      'Tueday',\n      'Wedday',\n      'Thuday',\n      'Friday',\n      'Saturday'\n    ];\n  if (d.getHours() === 0) {\n    hours = 12;\n  } else if (d.getHours() > 12) {\n    hours = d.getHours() - 12;\n  } else {\n    hours = d.getHours();\n  }\n  return (\n    days[d.getDay()] +\n    ', ' +\n    months[d.getMonth()] +\n    ' ' +\n    d.getDate() +\n    ', ' +\n    d.getFullYear() +\n    ' | ' +\n    hours +\n    ':' +\n    minutes +\n    ampm\n  );\n};\n\nexport default currentTimestamp;\n","import React from 'react';\n\nimport DateTime from './DateTime';\nimport styles from './TitleBar.module.scss';\n\nexport default class TitleBar extends React.Component {\n  render() {\n    return (\n      <header className={styles.newsletterHead}>\n        <div className={styles.title} id=\"title\">\n          The Newsletter\n        </div>\n        <time className={styles.timeStamp}>\n          <DateTime />\n        </time>\n      </header>\n    );\n  }\n}\n","const postUrl = \"https://the-newsletter-app-back.herokuapp.com/api/list\";\n\nexport function setPosts() {\n  const promise = fetch(`${postUrl}/list`)\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: \"SET_POSTS\",\n    payload: promise\n  };\n}\nexport function updatePost(query) {\n  const postUrl = process.env.REACT_APP_API_URL;\n  const promise = fetch(postUrl, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: \"UPDATE_POST\",\n    payload: promise\n  };\n}\nexport function addSource(query) {\n  const promise = fetch(postUrl, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      action: query.action,\n      id: query.id || \"\",\n      fields: query.fields\n    })\n  }).then(r => r.json());\n\n  return {\n    type: \"ADD_SOURCE\",\n    payload: promise\n  };\n}\n\nexport function setSources() {\n  const promise = fetch(`${postUrl}/sources`).then(r => r.json());\n  return {\n    type: \"SET_SOURCES\",\n    payload: promise\n  };\n}\n\nexport function selectPost(postId) {\n  const promise = fetch(`${postUrl}/post/${postId}`).then(r => r.json());\n  return {\n    type: \"SELECT_POST\",\n    payload: promise\n  };\n}\n\n// export function selectModule(module) {\n//   return {\n//     type: 'SELECT_MODULE',\n//     payload: module\n//   };\n// }\n\nexport function sourceCreateModule(status) {\n  return {\n    type: \"SHOW_MODULE\",\n    payload: status\n  };\n}\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { updatePost } from '../../../actions';\n\nimport style from './PostButton.module.scss';\n\nclass PostButton extends React.Component {\n  updatePost = () => {\n    let action = '';\n    switch (this.props.type) {\n      case 'star':\n        action = ['post', 'update'];\n        break;\n      default:\n        action = ['post', 'delete'];\n        break;\n    }\n    let fields = {};\n    fields[`${this.props.type}`] = !this.props.value;\n    const query = { id: this.props.postId, action: action, fields: fields };\n    this.props.updatePost(query);\n    if (this.props.toggle) {\n      this.props.toggle('Home');\n    }\n  };\n\n  render() {\n    let button = '×';\n    let buttonStyle = style.button;\n    switch (this.props.type) {\n      case 'star':\n        button = '√';\n        if (this.props.value) {\n          buttonStyle = style.on;\n        }\n        break;\n    }\n    return (\n      <button className={buttonStyle} onClick={this.updatePost}>\n        {button}\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePost: updatePost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    updatePost: state.updatePost\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostButton);\n","const months = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nconst daysOfWeek = {\n  1: 'Sun',\n  2: 'Mon',\n  3: 'Tue',\n  4: 'Wed',\n  5: 'Thu',\n  6: 'Fri',\n  7: 'Sat'\n};\n\nconst dateTime = props => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from 'react';\n\nimport PostButton from './PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostCard.module.scss';\n\nclass PostCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = () => {\n    this.props.selector(this.props.post._id);\n  };\n\n  render() {\n    const text = `${this.props.post.text.replace(/<(?:.|\\n)*?>/gm, ' ')}...`;\n    let bodyClass = '';\n    if (this.props.post.read) {\n      bodyClass = style.bodyRead;\n    } else {\n      bodyClass = style.body;\n    }\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    return (\n      <section className={bodyClass} key={this.props.post._id}>\n        <header className={style.title} onClick={this.handleClick}>\n          {this.props.post.title}\n        </header>\n        <section className={style.secondLine}>\n          <div className={style.source}>@ {this.props.post.source}</div>\n          <PostButton\n            type=\"star\"\n            value={this.props.post.star}\n            postId={this.props.post._id}\n          />\n        </section>\n        <section\n          className={style.text}\n          onClick={this.handleClick}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <footer className={style.statusLine}>\n          <div>{publishedDate}</div>\n          <div>~ {this.props.post.readTime} mins</div>\n        </footer>\n        <div className={style.divider} />\n      </section>\n    );\n  }\n}\n\nexport default PostCard;\n","import React from 'react';\n\nimport style from './Error.module.scss';\n\nconst error = props => {\n  return (\n    <main className={style.errorWrapper}>\n      <p className={style.errorTitle}>ERROR</p>\n      <p className={style.error}>{props.message}</p>\n    </main>\n  );\n};\n\nexport default error;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setPosts } from '../../actions';\nimport { selectPost } from '../../actions';\n\nimport PostCard from './PostCard';\nimport style from './PostCardList.module.scss';\nimport Error from '../../components/Error/Error';\n\nclass PostCardList extends React.Component {\n  componentWillMount() {\n    this.fetchMessages();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchMessages, 5000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchMessages = () => {\n    this.props.setPosts().then(data => {});\n  };\n  selectPostToShow = postId => {\n    this.props.selectPost(postId).then(data => {\n      this.props.showPost(data);\n    });\n  };\n  render() {\n    const message = this.props.posts.message;\n    if (message) {\n      return <Error message={message} />;\n    }\n    return (\n      <div className={style.content}>\n        {this.props.posts.map(post => {\n          return (\n            <PostCard\n              selector={this.selectPostToShow}\n              post={post}\n              key={post._id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setPosts, selectPost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCardList);\n","import React from 'react';\n\nclass SourceButton extends React.Component {\n  render() {\n    let button = '';\n    switch (this.props.type) {\n      case 'edit':\n        button = 'fas fa-pencil-alt';\n        break;\n      case 'add':\n        button = 'fas fa-plus';\n        break;\n      default:\n        button = 'far fa-trash-alt';\n    }\n    return (\n      <button>\n        <i className={button} />\n      </button>\n    );\n  }\n}\n\nexport default SourceButton;\n","import React from 'react';\n\nimport SourceButton from './SourceButton/SourceButton';\nimport style from './SourceCard.module.scss';\n\nclass SourceCard extends React.Component {\n  goHome() {}\n  render() {\n    return (\n      <section className={style.section}>\n        <section className={style.nameWrapper}>\n          <p onClick={this.goHome} className={style.name}>\n            {this.props.source.name}\n          </p>\n          <p className={style.url}>{this.props.source.url}</p>\n        </section>\n        <section className={style.buttonsWrapper}>\n          <SourceButton type=\"edit\" postId={this.props.source._id} />\n          <SourceButton type=\"delete\" />\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default SourceCard;\n","import React from 'react';\n\nimport style from './SourceCreate.module.scss';\n\nclass SourceCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      url: '',\n      homepage: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let change = {};\n    let field = event.target.name;\n    change[field] = event.target.value;\n    this.setState(change);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const values = {\n      name: event.target[0].value,\n      url: event.target[1].value,\n      home: event.target[2].value\n    };\n    this.props.toggle();\n    this.props.create(values);\n  }\n  render() {\n    console.log(this.props);\n\n    return (\n      <form onSubmit={this.handleSubmit} className={style.createForm}>\n        <label>\n          <div className={style.labelTitle}>Name</div>\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>URL</div>\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>Homepage</div>\n          <input\n            type=\"text\"\n            name=\"home\"\n            value={this.state.home}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button\n          className={style.submit}\n          as=\"input\"\n          type=\"submit\"\n          value=\"Submit\"\n        >\n          Create\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SourceCreate;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setSources } from '../../actions';\nimport { addSource } from '../../actions';\n// import { sourceCreateModule } from \"../../actions\";\n\nimport SourceCard from '../../components/Sources/SourceCard';\nimport SourceButton from '../../components/Sources/SourceButton/SourceButton';\nimport SourceCreate from './SourceCreate/SourceCreate';\nimport style from './SourcesList.module.scss';\n\nclass SourcesList extends React.Component {\n  state = {\n    showAddSource: false\n  };\n  toggleAddSource = () => {\n    this.setState(state => ({ showAddSource: !this.state.showAddSource }));\n    console.log(this.state.showAddSource);\n  };\n\n  componentWillMount() {\n    this.fetchSources();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchSources, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchSources = () => {\n    this.props.setSources();\n  };\n\n  createSource = fields => {\n    const request = { action: ['source', 'create'], fields };\n    this.props.addSource(request);\n  };\n\n  render() {\n    return (\n      <section className={style.section}>\n        <div className={style.addSource} onClick={this.toggleAddSource}>\n          <SourceButton type=\"add\" />\n          Add Source\n        </div>\n        {this.state.showAddSource ? (\n          <SourceCreate\n            create={this.createSource}\n            toggle={this.toggleAddSource}\n          />\n        ) : null}\n        {this.props.sources.map(source => {\n          return <SourceCard source={source} key={source._id} />;\n        })}\n      </section>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setSources, addSource }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    sources: state.sources,\n    addSource: state.addSource\n    // sourceCreateModule: state.sourceCreateModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SourcesList);\n","import React from 'react';\n\nimport PostButton from '../../containers/Posts/PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostShow.module.scss';\n\nclass PostShow extends React.Component {\n  handleClick = () => {\n    window.open(this.props.post.url, '_blank');\n  };\n\n  componentDidMount = () => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    let author = '';\n    if (!this.props.post.author) {\n      author = '';\n    } else {\n      author = `by ${this.props.post.author}`;\n    }\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    const parsedDate = dateTime(new Date(this.props.post.parsed));\n    return (\n      <article className={style.body}>\n        <header className={style.title} onClick={this.handleClick}>\n          {this.props.post.title}\n        </header>\n        <div className={style.secondLine}>\n          <div className={style.author}>{author}</div>\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.props.post.star}\n              postId={this.props.post._id}\n            />\n            <PostButton\n              type=\"delete\"\n              postId={this.props.post._id}\n              toggle={this.props.toggle}\n            />\n          </div>\n        </div>\n        <section\n          className={style.text}\n          dangerouslySetInnerHTML={{ __html: this.props.post.text }}\n        />\n        <div className={style.divider} />\n        <footer className={style.statusLine}>\n          <div>published: {publishedDate}</div>\n          <div>parsed: {parsedDate}</div>\n          <div>~ {this.props.post.pages} pages</div>\n        </footer>\n      </article>\n    );\n  }\n}\n\nexport default PostShow;\n","import React from 'react';\n\nimport PostCardList from '../containers/Posts/PostCardList';\nimport SourcesList from '../containers/Sources/SourcesList';\nimport PostShow from './Posts/PostShow';\n\nclass ContentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {}\n    };\n  }\n\n  setPostToShow = post => {\n    this.setState({ post: post.payload });\n    this.props.toggle('show');\n  };\n\n  render() {\n    switch (this.props.show) {\n      case 'Home':\n        return <PostCardList showPost={this.setPostToShow} />;\n      case 'show':\n        return <PostShow post={this.state.post} toggle={this.props.toggle} />;\n      case 'Sources':\n        return <SourcesList />;\n      default:\n        return <PostCardList />;\n    }\n  }\n}\n\nexport default ContentDisplay;\n","import React from 'react';\n\nimport style from './NavMenuElement.module.scss';\n\nclass NavMenuElement extends React.Component {\n  handleClick = () => {\n    this.props.show(this.props.name);\n  };\n\n  render() {\n    if (this.props.name === 'arrow') {\n      const classStyle = 'fas fa-chevron-left';\n      return (\n        <section className={style.elementArrow} onClick={this.handleClick}>\n          <div className={style.buttonArrow}>\n            <i className={classStyle} />\n          </div>\n        </section>\n      );\n    } else {\n      return (\n        <section className={style.element} onClick={this.handleClick}>\n          <div className={style.button}>{this.props.name}</div>\n        </section>\n      );\n    }\n  }\n}\n\nexport default NavMenuElement;\n","import React from 'react';\n\nimport NavMenuElement from './NavMenuElement';\nimport style from './NavMenu.module.scss';\n\nclass NavMenu extends React.Component {\n  render() {\n    return (\n      <nav className={style.menu}>\n        <NavMenuElement show={this.props.show} name=\"arrow\" />\n        <NavMenuElement show={this.props.show} name=\"Home\" />\n        <NavMenuElement show={this.props.show} name=\"Sources\" />\n      </nav>\n    );\n  }\n}\n\nexport default NavMenu;\n","import React from 'react';\n\nimport TitleBar from '../TitleBar/TitleBar';\nimport ContentDisplay from '../ContentDisplay';\nimport NavMenu from '../NavMenu/NavMenu';\n\nclass App extends React.Component {\n  state = {\n    module: 'Home'\n  };\n  showModule = module => {\n    this.setState(state => ({ module: module }));\n  };\n  render() {\n    return (\n      <main>\n        <TitleBar />\n        <ContentDisplay show={this.state.module} toggle={this.showModule} />\n        <NavMenu show={this.showModule} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\n// reducers\nimport postsReducer from './reducers/posts_reducer';\nimport sourcesReducer from './reducers/sources_reducer';\nimport addSourceReducer from './reducers/add_source_reducer';\nimport updatePostReducer from './reducers/update_post_reducer';\nimport selectPostReducer from './reducers/select_post_reducer';\n// import selectModuleReducer from './reducers/select_module_reducer';\nimport sourceCreateModuleReducer from './reducers/source_create_module_reducer.js';\n\nimport WebFont from 'webfontloader';\n\n// load components\nimport App from './components/App/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: ['Aleo:300,300i,400,400i,700', 'IBM Plex Mono:300,400']\n  }\n});\n\nconst initialState = {\n  posts: [],\n  sources: [],\n  addSource: '',\n  updatePost: '',\n  selectPost: '',\n  // selectModule: 'Home',\n  sourceCreateModule: true\n};\n\n// Define reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  sources: sourcesReducer,\n  addSource: addSourceReducer,\n  updatePost: updatePostReducer,\n  selectPost: selectPostReducer,\n  // selectModule: selectModuleReducer,\n  sourceCreateModule: sourceCreateModuleReducer\n});\n// Add logger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(reduxPromise, logger));\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'ADD_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SHOW_MODULE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostCard_body__3hbvz\",\"bodyFlex\":\"PostCard_bodyFlex__1TYUE\",\"bodyRead\":\"PostCard_bodyRead__1JMP2\",\"title\":\"PostCard_title__131Au\",\"secondLine\":\"PostCard_secondLine__KD5pA\",\"source\":\"PostCard_source__3-ict\",\"text\":\"PostCard_text__2kRll\",\"statusLine\":\"PostCard_statusLine__1d_h8\",\"divider\":\"PostCard_divider__3wj7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostShow_body__1NQ_n\",\"title\":\"PostShow_title__2HfCj\",\"secondLine\":\"PostShow_secondLine__9dJW5\",\"author\":\"PostShow_author__1S4ap\",\"buttonsWrapper\":\"PostShow_buttonsWrapper__10ox5\",\"text\":\"PostShow_text__27vjt\",\"signature\":\"PostShow_signature__22jd-\",\"book-cta\":\"PostShow_book-cta__3WUf0\",\"divider\":\"PostShow_divider__zhco3\",\"statusLine\":\"PostShow_statusLine__3higE\"};"],"sourceRoot":""}