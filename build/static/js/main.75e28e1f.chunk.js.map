{"version":3,"sources":["containers/Sources/SourceCreate/SourceCreate.module.scss","components/Sources/SourceCard.module.scss","components/TitleBar/TitleBar.module.scss","components/Error/Error.module.scss","components/NavMenu/NavMenuElement.module.scss","containers/Posts/PostButton/PostButton.module.scss","containers/Sources/SourcesList.module.scss","components/NavMenu/NavMenu.module.scss","containers/Posts/PostCardList.module.scss","components/TitleBar/DateTime.js","components/TitleBar/TitleBar.js","actions/index.js","containers/Posts/PostButton/PostButton.js","modules/date_time.js","containers/Posts/PostCard.js","components/Error/Error.js","containers/Posts/PostCardList.js","components/Sources/SourceButton/SourceButton.js","components/Sources/SourceCard.js","containers/Sources/SourceCreate/SourceCreate.js","containers/Sources/SourcesList.js","components/Posts/PostShow.js","components/ContentDisplay.js","components/NavMenu/NavMenuElement.js","components/NavMenu/NavMenu.js","components/App/App.js","serviceWorker.js","index.js","reducers/posts_reducer.js","reducers/sources_reducer.js","reducers/add_source_reducer.js","reducers/update_post_reducer.js","reducers/select_post_reducer.js","reducers/source_create_module_reducer.js","containers/Posts/PostCard.module.scss","components/Posts/PostShow.module.scss"],"names":["module","exports","createForm","createFields","labelTitle","section","name","url","newsletterHead","title","timeStamp","errorWrapper","errorTitle","error","element","button","buttonArrow","buttonArrowOpen","on","addSource","menu","menuOpen","content","contentFlex","currentTimestamp","props","hours","d","Date","minutes","getMinutes","toString","length","ampm","getHours","getDay","getMonth","getDate","getFullYear","TitleBar","showHome","_this","toggle","react_default","a","createElement","className","styles","onClick","this","id","DateTime","React","Component","postUrl","process","setPosts","type","payload","fetch","concat","then","r","json","catch","e","updatePost","query","method","headers","Accept","Content-Type","body","JSON","stringify","action","fields","setSources","selectPost","postId","PostButton","value","buttonStyle","style","connect","state","dispatch","bindActionCreators","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateTime","dateFromDb","Object","keys","timeToDisplay","PostCard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","selector","post","_id","bind","assertThisInitialized","text","replace","bodyClass","read","bodyRead","publishedDate","published","key","secondLine","source","Posts_PostButton_PostButton","star","dangerouslySetInnerHTML","__html","statusLine","readTime","divider","message","PostCardList","fetchMessages","data","selectPostToShow","showPost","refresher","setInterval","window","scrollTo","clearInterval","_this2","posts","Error","map","Posts_PostCard","selectModule","SourceButton","SourceCard","nameWrapper","goHome","buttonsWrapper","Sources_SourceButton_SourceButton","SourceCreate","homepage","handleChange","handleSubmit","event","change","target","setState","preventDefault","values","home","create","console","log","onSubmit","input","onChange","submit","as","SourcesList","showAddSource","toggleAddSource","fetchSources","createSource","request","Sources_SourceCreate_SourceCreate","sources","Sources_SourceCard","PostShow","open","componentDidMount","author","parsedDate","parsed","pages","ContentDisplay","setPostToShow","show","Posts_PostCardList","Posts_PostShow","Sources_SourcesList","NavMenuElement","options","elementStyle","menuStatus","NavMenu","menuStyle","NavMenu_NavMenuElement","App","showModule","TitleBar_TitleBar","components_ContentDisplay","components_NavMenu_NavMenu","Boolean","location","hostname","match","WebFont","load","google","families","reducers","combineReducers","arguments","undefined","sourceCreateModule","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxPromise","logger","ReactDOM","render","es","store","createStore","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","bodyFlex","signature","book-cta","border-bottom"],"mappings":"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","file":"static/js/main.75e28e1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createForm\":\"SourceCreate_createForm__2KrBN\",\"createFields\":\"SourceCreate_createFields__8F5Ek\",\"labelTitle\":\"SourceCreate_labelTitle__3LPuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SourceCard_section__hWmMe\",\"name\":\"SourceCard_name__327TD\",\"url\":\"SourceCard_url__59iZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsletterHead\":\"TitleBar_newsletterHead__Zupct\",\"title\":\"TitleBar_title__3MWB3\",\"timeStamp\":\"TitleBar_timeStamp__wN8_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__1wrJh\",\"errorTitle\":\"Error_errorTitle__31zwY\",\"error\":\"Error_error__2k7aI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"NavMenuElement_element__3XeYF\",\"button\":\"NavMenuElement_button__1qALZ\",\"buttonArrow\":\"NavMenuElement_buttonArrow__1nY71\",\"buttonArrowOpen\":\"NavMenuElement_buttonArrowOpen__vyjhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostButton_button__3gCuo\",\"on\":\"PostButton_on__dfo7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addSource\":\"SourcesList_addSource__qePJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavMenu_menu__1haFk\",\"menuOpen\":\"NavMenu_menuOpen__3CT9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostCardList_content__15L4_\",\"contentFlex\":\"PostCardList_contentFlex__2hHWd\"};","const currentTimestamp = props => {\n  var hours = 0;\n  var d = new Date(),\n    minutes =\n      d.getMinutes().toString().length === 1\n        ? '0' + d.getMinutes()\n        : d.getMinutes(),\n    ampm = d.getHours() >= 12 ? 'pm' : 'am',\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ],\n    days = [\n      'Sunday',\n      'Monday',\n      'Tueday',\n      'Wedday',\n      'Thuday',\n      'Friday',\n      'Saturday'\n    ];\n  if (d.getHours() === 0) {\n    hours = 12;\n  } else if (d.getHours() > 12) {\n    hours = d.getHours() - 12;\n  } else {\n    hours = d.getHours();\n  }\n  return (\n    days[d.getDay()] +\n    ', ' +\n    months[d.getMonth()] +\n    ' ' +\n    d.getDate() +\n    ', ' +\n    d.getFullYear() +\n    ' | ' +\n    hours +\n    ':' +\n    minutes +\n    ampm\n  );\n};\n\nexport default currentTimestamp;\n","import React from 'react';\n\nimport DateTime from './DateTime';\nimport styles from './TitleBar.module.scss';\n\nexport default class TitleBar extends React.Component {\n  showHome = () => {\n    this.props.toggle('Home');\n  };\n  render() {\n    return (\n      <header className={styles.newsletterHead}>\n        <div className={styles.title} onClick={this.showHome} id=\"title\">\n          The Newsletter\n        </div>\n        <time className={styles.timeStamp}>\n          <DateTime />\n        </time>\n      </header>\n    );\n  }\n}\n","const postUrl =\n  process.env.REACT_APP_API_URL ||\n  \"http://the-newsletter-app-back.herokuapp.com/api\";\n\nexport function setPosts() {\n  const promise = fetch(`${postUrl}/list`)\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: \"SET_POSTS\",\n    payload: promise\n  };\n}\nexport function updatePost(query) {\n  const postUrl = process.env.REACT_APP_API_URL;\n  const promise = fetch(postUrl, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: \"UPDATE_POST\",\n    payload: promise\n  };\n}\nexport function addSource(query) {\n  const promise = fetch(postUrl, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      action: query.action,\n      id: query.id || \"\",\n      fields: query.fields\n    })\n  }).then(r => r.json());\n\n  return {\n    type: \"ADD_SOURCE\",\n    payload: promise\n  };\n}\n\nexport function setSources() {\n  const promise = fetch(`${postUrl}/sources`).then(r => r.json());\n  return {\n    type: \"SET_SOURCES\",\n    payload: promise\n  };\n}\n\nexport function selectPost(postId) {\n  const promise = fetch(`${postUrl}/post/${postId}`).then(r => r.json());\n  return {\n    type: \"SELECT_POST\",\n    payload: promise\n  };\n}\n\n// export function selectModule(module) {\n//   return {\n//     type: 'SELECT_MODULE',\n//     payload: module\n//   };\n// }\n\nexport function sourceCreateModule(status) {\n  return {\n    type: \"SHOW_MODULE\",\n    payload: status\n  };\n}\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { updatePost } from '../../../actions';\n\nimport style from './PostButton.module.scss';\n\nclass PostButton extends React.Component {\n  updatePost = () => {\n    let action = '';\n    switch (this.props.type) {\n      case 'star':\n        action = ['post', 'update'];\n        break;\n      default:\n        action = ['post', 'delete'];\n        break;\n    }\n    let fields = {};\n    fields[`${this.props.type}`] = !this.props.value;\n    const query = { id: this.props.postId, action: action, fields: fields };\n    this.props.updatePost(query);\n    if (this.props.toggle) {\n      this.props.toggle('Home');\n    }\n  };\n\n  render() {\n    let button = '×';\n    let buttonStyle = style.button;\n    switch (this.props.type) {\n      case 'star':\n        button = '√';\n        if (this.props.value) {\n          buttonStyle = style.on;\n        }\n        break;\n      default:\n        break;\n    }\n    return (\n      <button className={buttonStyle} onClick={this.updatePost}>\n        {button}\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePost: updatePost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    updatePost: state.updatePost\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostButton);\n","const months = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nconst daysOfWeek = {\n  1: 'Sun',\n  2: 'Mon',\n  3: 'Tue',\n  4: 'Wed',\n  5: 'Thu',\n  6: 'Fri',\n  7: 'Sat'\n};\n\nconst dateTime = props => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from 'react';\n\nimport PostButton from './PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostCard.module.scss';\n\nclass PostCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = () => {\n    this.props.selector(this.props.post._id);\n  };\n\n  render() {\n    const text = `${this.props.post.text.replace(/<(?:.|\\n)*?>/gm, ' ')}...`;\n    let bodyClass = '';\n    if (this.props.post.read) {\n      bodyClass = style.bodyRead;\n    } else {\n      bodyClass = style.body;\n    }\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    return (\n      <section className={bodyClass} key={this.props.post._id}>\n        <header className={style.title} onClick={this.handleClick}>\n          {this.props.post.title}\n        </header>\n        <section className={style.secondLine}>\n          <div className={style.source}>@ {this.props.post.source}</div>\n          <PostButton\n            type=\"star\"\n            value={this.props.post.star}\n            postId={this.props.post._id}\n          />\n        </section>\n        <section\n          className={style.text}\n          onClick={this.handleClick}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <footer className={style.statusLine}>\n          <div>{publishedDate}</div>\n          <div>~ {this.props.post.readTime} mins</div>\n        </footer>\n        <div className={style.divider} />\n      </section>\n    );\n  }\n}\n\nexport default PostCard;\n","import React from 'react';\n\nimport style from './Error.module.scss';\n\nconst error = props => {\n  return (\n    <main className={style.errorWrapper}>\n      <p className={style.errorTitle}>ERROR</p>\n      <p className={style.error}>{props.message}</p>\n    </main>\n  );\n};\n\nexport default error;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setPosts } from '../../actions';\nimport { selectPost } from '../../actions';\n\nimport PostCard from './PostCard';\nimport style from './PostCardList.module.scss';\nimport Error from '../../components/Error/Error';\n\nclass PostCardList extends React.Component {\n  componentWillMount() {\n    this.fetchMessages();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchMessages, 5000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchMessages = () => {\n    this.props.setPosts().then(data => {});\n  };\n  selectPostToShow = postId => {\n    this.props.selectPost(postId).then(data => {\n      this.props.showPost(data);\n    });\n  };\n  render() {\n    const message = this.props.posts.message;\n    if (message) {\n      return <Error message={message} />;\n    }\n    return (\n      <div className={style.content}>\n        {this.props.posts.map(post => {\n          return (\n            <PostCard\n              selector={this.selectPostToShow}\n              post={post}\n              key={post._id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setPosts, selectPost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCardList);\n","import React from 'react';\n\nclass SourceButton extends React.Component {\n  render() {\n    let button = '';\n    switch (this.props.type) {\n      case 'edit':\n        button = 'fas fa-pencil-alt';\n        break;\n      case 'add':\n        button = 'fas fa-plus';\n        break;\n      default:\n        button = 'far fa-trash-alt';\n    }\n    return (\n      <button>\n        <i className={button} />\n      </button>\n    );\n  }\n}\n\nexport default SourceButton;\n","import React from 'react';\n\nimport SourceButton from './SourceButton/SourceButton';\nimport style from './SourceCard.module.scss';\n\nclass SourceCard extends React.Component {\n  goHome() {}\n  render() {\n    return (\n      <section className={style.section}>\n        <section className={style.nameWrapper}>\n          <p onClick={this.goHome} className={style.name}>\n            {this.props.source.name}\n          </p>\n          <p className={style.url}>{this.props.source.url}</p>\n        </section>\n        <section className={style.buttonsWrapper}>\n          <SourceButton type=\"edit\" postId={this.props.source._id} />\n          <SourceButton type=\"delete\" />\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default SourceCard;\n","import React from 'react';\n\nimport style from './SourceCreate.module.scss';\n\nclass SourceCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      url: '',\n      homepage: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let change = {};\n    let field = event.target.name;\n    change[field] = event.target.value;\n    this.setState(change);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const values = {\n      name: event.target[0].value,\n      url: event.target[1].value,\n      home: event.target[2].value\n    };\n    this.props.toggle();\n    this.props.create(values);\n  }\n  render() {\n    console.log(this.props);\n\n    return (\n      <form onSubmit={this.handleSubmit} className={style.createForm}>\n        <label>\n          <div className={style.labelTitle}>Name</div>\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>URL</div>\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>Homepage</div>\n          <input\n            type=\"text\"\n            name=\"home\"\n            value={this.state.home}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button\n          className={style.submit}\n          as=\"input\"\n          type=\"submit\"\n          value=\"Submit\"\n        >\n          Create\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SourceCreate;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setSources } from '../../actions';\nimport { addSource } from '../../actions';\n// import { sourceCreateModule } from \"../../actions\";\n\nimport SourceCard from '../../components/Sources/SourceCard';\nimport SourceButton from '../../components/Sources/SourceButton/SourceButton';\nimport SourceCreate from './SourceCreate/SourceCreate';\nimport style from './SourcesList.module.scss';\n\nclass SourcesList extends React.Component {\n  state = {\n    showAddSource: false\n  };\n  toggleAddSource = () => {\n    this.setState(state => ({ showAddSource: !this.state.showAddSource }));\n    console.log(this.state.showAddSource);\n  };\n\n  componentWillMount() {\n    this.fetchSources();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchSources, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchSources = () => {\n    this.props.setSources();\n  };\n\n  createSource = fields => {\n    const request = { action: ['source', 'create'], fields };\n    this.props.addSource(request);\n  };\n\n  render() {\n    return (\n      <section className={style.section}>\n        <div className={style.addSource} onClick={this.toggleAddSource}>\n          <SourceButton type=\"add\" />\n          Add Source\n        </div>\n        {this.state.showAddSource ? (\n          <SourceCreate\n            create={this.createSource}\n            toggle={this.toggleAddSource}\n          />\n        ) : null}\n        {this.props.sources.map(source => {\n          return <SourceCard source={source} key={source._id} />;\n        })}\n      </section>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setSources, addSource }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    sources: state.sources,\n    addSource: state.addSource\n    // sourceCreateModule: state.sourceCreateModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SourcesList);\n","import React from 'react';\n\nimport PostButton from '../../containers/Posts/PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostShow.module.scss';\n\nclass PostShow extends React.Component {\n  handleClick = () => {\n    window.open(this.props.post.url, '_blank');\n  };\n\n  componentDidMount = () => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    let author = '';\n    if (!this.props.post.author) {\n      author = '';\n    } else {\n      author = `by ${this.props.post.author}`;\n    }\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    const parsedDate = dateTime(new Date(this.props.post.parsed));\n    return (\n      <article className={style.body}>\n        <header className={style.title} onClick={this.handleClick}>\n          {this.props.post.title}\n        </header>\n        <div className={style.secondLine}>\n          <div className={style.author}>{author}</div>\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.props.post.star}\n              postId={this.props.post._id}\n            />\n            <PostButton\n              type=\"delete\"\n              postId={this.props.post._id}\n              toggle={this.props.toggle}\n            />\n          </div>\n        </div>\n        <section\n          className={style.text}\n          dangerouslySetInnerHTML={{ __html: this.props.post.text }}\n        />\n        <div className={style.divider} />\n        <footer className={style.statusLine}>\n          <div>published: {publishedDate}</div>\n          <div>parsed: {parsedDate}</div>\n          <div>~ {this.props.post.pages} pages</div>\n        </footer>\n      </article>\n    );\n  }\n}\n\nexport default PostShow;\n","import React from 'react';\n\nimport PostCardList from '../containers/Posts/PostCardList';\nimport SourcesList from '../containers/Sources/SourcesList';\nimport PostShow from './Posts/PostShow';\n\nclass ContentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {}\n    };\n  }\n\n  setPostToShow = post => {\n    this.setState({ post: post.payload });\n    this.props.toggle('show');\n  };\n\n  render() {\n    switch (this.props.show) {\n      case 'Home':\n        return <PostCardList showPost={this.setPostToShow} />;\n      case 'show':\n        return <PostShow post={this.state.post} toggle={this.props.toggle} />;\n      case 'Sources':\n        return <SourcesList />;\n      default:\n        return <PostCardList />;\n    }\n  }\n}\n\nexport default ContentDisplay;\n","import React from 'react';\n\nimport style from './NavMenuElement.module.scss';\n\nclass NavMenuElement extends React.Component {\n  handleClick = () => {\n    if (this.props.name !== 'arrow') this.props.options.show(this.props.name);\n    this.props.options.menuOpen('');\n  };\n\n  render() {\n    let elementStyle = style.button;\n    let button = this.props.name;\n    if (button === '➤') {\n      if (this.props.options.menuStatus) {\n        elementStyle = style.buttonArrowOpen;\n      } else {\n        elementStyle = style.buttonArrow;\n      }\n    }\n    console.log(this.props);\n    return (\n      <div onClick={this.handleClick} className={elementStyle}>\n        {button}\n      </div>\n    );\n  }\n}\n\nexport default NavMenuElement;\n","import React from 'react';\n\nimport NavMenuElement from './NavMenuElement';\nimport style from './NavMenu.module.scss';\n\nclass NavMenu extends React.Component {\n  render() {\n    console.log(this.props);\n\n    let menuStyle = style.menu;\n    if (this.props.options.menuStatus) menuStyle = style.menuOpen;\n    return (\n      <nav className={menuStyle}>\n        <NavMenuElement options={this.props.options} name=\"➤\" />\n        <NavMenuElement options={this.props.options} name=\"Home\" />\n        <NavMenuElement options={this.props.options} name=\"Sources\" />\n      </nav>\n    );\n  }\n}\n\nexport default NavMenu;\n","import React from 'react';\n\nimport TitleBar from '../TitleBar/TitleBar';\nimport ContentDisplay from '../ContentDisplay';\nimport NavMenu from '../NavMenu/NavMenu';\n\nclass App extends React.Component {\n  state = {\n    module: 'Home',\n    menuOpen: false\n  };\n  showModule = module => {\n    this.setState(state => ({ module: module }));\n  };\n  menuOpen = () => {\n    this.setState({\n      menuOpen: !this.state.menuOpen\n    });\n  };\n\n  render() {\n    const options = {\n      show: this.showModule,\n      menuOpen: this.menuOpen,\n      menuStatus: this.state.menuOpen\n    };\n    return (\n      <main>\n        <TitleBar toggle={this.showModule} />\n        <ContentDisplay show={this.state.module} toggle={this.showModule} />\n        <NavMenu options={options} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\n// reducers\nimport postsReducer from './reducers/posts_reducer';\nimport sourcesReducer from './reducers/sources_reducer';\nimport addSourceReducer from './reducers/add_source_reducer';\nimport updatePostReducer from './reducers/update_post_reducer';\nimport selectPostReducer from './reducers/select_post_reducer';\n// import selectModuleReducer from './reducers/select_module_reducer';\nimport sourceCreateModuleReducer from './reducers/source_create_module_reducer.js';\n\nimport WebFont from 'webfontloader';\n\n// load components\nimport App from './components/App/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: ['Aleo:300,300i,400,400i,700', 'IBM Plex Mono:300,400']\n  }\n});\n\nconst initialState = {\n  posts: [],\n  sources: [],\n  addSource: '',\n  updatePost: '',\n  selectPost: '',\n  // selectModule: 'Home',\n  sourceCreateModule: true\n};\n\n// Define reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  sources: sourcesReducer,\n  addSource: addSourceReducer,\n  updatePost: updatePostReducer,\n  selectPost: selectPostReducer,\n  // selectModule: selectModuleReducer,\n  sourceCreateModule: sourceCreateModuleReducer\n});\n// Add logger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(reduxPromise, logger));\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'ADD_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SHOW_MODULE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostCard_body__3hbvz\",\"bodyFlex\":\"PostCard_bodyFlex__1TYUE\",\"bodyRead\":\"PostCard_bodyRead__1JMP2\",\"title\":\"PostCard_title__131Au\",\"secondLine\":\"PostCard_secondLine__KD5pA\",\"source\":\"PostCard_source__3-ict\",\"text\":\"PostCard_text__2kRll\",\"statusLine\":\"PostCard_statusLine__1d_h8\",\"divider\":\"PostCard_divider__3wj7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostShow_body__1NQ_n\",\"title\":\"PostShow_title__2HfCj\",\"secondLine\":\"PostShow_secondLine__9dJW5\",\"author\":\"PostShow_author__1S4ap\",\"buttonsWrapper\":\"PostShow_buttonsWrapper__10ox5\",\"text\":\"PostShow_text__27vjt\",\"signature\":\"PostShow_signature__22jd-\",\"book-cta\":\"PostShow_book-cta__3WUf0\",\"border-bottom\":\"PostShow_border-bottom__OPWyx\",\"divider\":\"PostShow_divider__zhco3\",\"statusLine\":\"PostShow_statusLine__3higE\"};"],"sourceRoot":""}