{"version":3,"sources":["containers/Sources/SourceCreate/SourceCreate.module.scss","components/Posts/PostShow.module.scss","components/Sources/SourceCard.module.scss","components/Posts/PostCard.module.scss","components/TitleBar/TitleBar.module.scss","components/Error/Error.module.scss","components/Sources/SourceButton/SourceButton.module.scss","containers/Sources/SourcesList.module.scss","components/NavMenu/NavMenuElement.module.scss","components/PostTitle/PostTitle.module.scss","containers/Posts/PostButton/PostButton.module.scss","components/Source/Source.module.scss","components/NavMenu/NavMenu.module.scss","components/Divider/Divider.module.scss","containers/Posts/PostCardList.module.scss","components/DateTime.js","components/TitleBar/TitleBar.js","actions/index.js","components/PostTitle/PostTitle.js","containers/Posts/PostButton/PostButton.js","components/Source/Source.js","components/ApproxVolume.js","components/Divider/Divider.js","components/Posts/PostCard.js","components/Error/Error.js","containers/Posts/PostCardList.js","components/Sources/SourceButton/SourceButton.js","containers/Sources/SourceCreate/SourceCreate.js","components/Sources/SourceCard.js","containers/Sources/SourcesList.js","components/Posts/PostShow.js","containers/ContentDisplay.js","components/NavMenu/NavMenuElement.js","components/NavMenu/NavMenu.js","containers/App/App.js","serviceWorker.js","index.js","reducers/posts_reducer.js","reducers/sources_reducer.js","reducers/add_source_reducer.js","reducers/select_post_reducer.js","reducers/update_post_reducer.js","reducers/update_source_reducer.js","reducers/delete_source_reducer.js","reducers/refresh_posts_reducer.js","reducers/source_create_module_reducer.js"],"names":["module","exports","createForm","openForm","labelTitle","center","body","secondLine","sourceAuthorWrapper","author","buttonsWrapper","text","signature","book-cta","border-bottom","statusLine","sectionWrapper","section","nameWrapper","name","url","bodyFlex","bodyRead","divider","newsletterHead","title","timeStamp","errorWrapper","errorTitle","error","button","buttonDims","addSource","refreshSource","message","element","buttonArrow","buttonArrowOpen","postTitle","postTitleShow","on","source","sourceShow","menu","menuOpen","content","contentFlex","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","DateTime","dateFromDb","Date","this","props","timestamp","timeToDisplay","concat","getHours","getMinutes","dateTimeString","getDay","getDate","getMonth","pre","react_default","a","createElement","React","Component","TitleBar","showHome","_this","toggle","className","styles","onClick","id","components_DateTime","postUrl","process","setPosts","type","payload","fetch","then","r","json","catch","e","updatePost","query","method","headers","Accept","Content-Type","JSON","stringify","updateSource","refreshPosts","action","deleteSource","setSources","selectPost","postId","PostTitle","handleClick","titleClick","postTitleStyle","style","mode","PostButton","fields","value","buttonStyle","connect","state","dispatch","bindActionCreators","Source","sourceStyle","ApproxVolume","volume","units","Divider","PostCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selector","post","_id","bind","assertThisInitialized","replace","bodyClass","read","key","components_PostTitle_PostTitle","components_Source_Source","Posts_PostButton_PostButton","star","dangerouslySetInnerHTML","__html","published","components_ApproxVolume","readTime","components_Divider_Divider","PostCardList","fetchPosts","data","selectPostToShow","showPost","refresher","setInterval","window","scrollTo","clearInterval","_this2","posts","Error","map","Posts_PostCard","selectModule","SourceButton","show","sourceDelete","refresh","toggleEditSource","sourceId","SourceCreate","home","handleChange","handleSubmit","event","change","target","setState","preventDefault","values","create","onSubmit","input","onChange","submit","as","SourceCard","showEdit","showEditSourceId","goHome","Sources_SourceButton_SourceButton","Sources_SourceCreate_SourceCreate","SourcesList","showAddSource","showEditSource","toggleAddSource","console","log","changeMessage","setTimeout","clearMessage","fetchSources","createSource","request","handleRefreshPosts","sources","length","Sources_SourceCard","PostShow","open","componentDidMount","parsed","pages","ContentDisplay","setPostToShow","Posts_PostCardList","Posts_PostShow","Sources_SourcesList","NavMenuElement","options","elementStyle","menuStatus","NavMenu","menuStyle","NavMenu_NavMenuElement","App","showModule","TitleBar_TitleBar","containers_ContentDisplay","components_NavMenu_NavMenu","Boolean","location","hostname","match","WebFont","load","google","families","reducers","combineReducers","arguments","undefined","refreshPostsReducer","sourceCreateModule","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxPromise","logger","ReactDOM","render","es","store","createStore","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfb6f48d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createForm\":\"SourceCreate_createForm__2KrBN\",\"openForm\":\"SourceCreate_openForm__38EM7\",\"labelTitle\":\"SourceCreate_labelTitle__3LPuJ\",\"center\":\"SourceCreate_center__2Pt9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostShow_body__1NQ_n\",\"secondLine\":\"PostShow_secondLine__9dJW5\",\"sourceAuthorWrapper\":\"PostShow_sourceAuthorWrapper__1ouJ0\",\"author\":\"PostShow_author__1S4ap\",\"buttonsWrapper\":\"PostShow_buttonsWrapper__10ox5\",\"text\":\"PostShow_text__27vjt\",\"signature\":\"PostShow_signature__22jd-\",\"book-cta\":\"PostShow_book-cta__3WUf0\",\"border-bottom\":\"PostShow_border-bottom__OPWyx\",\"statusLine\":\"PostShow_statusLine__3higE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionWrapper\":\"SourceCard_sectionWrapper__3-amw\",\"section\":\"SourceCard_section__hWmMe\",\"nameWrapper\":\"SourceCard_nameWrapper__1DyWm\",\"name\":\"SourceCard_name__327TD\",\"url\":\"SourceCard_url__59iZD\",\"buttonsWrapper\":\"SourceCard_buttonsWrapper__2dmZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostCard_body__1p5X1\",\"bodyFlex\":\"PostCard_bodyFlex__17qjU\",\"bodyRead\":\"PostCard_bodyRead__22Wpt\",\"secondLine\":\"PostCard_secondLine__30F6_\",\"text\":\"PostCard_text__esTXc\",\"statusLine\":\"PostCard_statusLine__eik_Y\",\"divider\":\"PostCard_divider__29SqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsletterHead\":\"TitleBar_newsletterHead__Zupct\",\"title\":\"TitleBar_title__3MWB3\",\"timeStamp\":\"TitleBar_timeStamp__wN8_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__1wrJh\",\"errorTitle\":\"Error_errorTitle__31zwY\",\"error\":\"Error_error__2k7aI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SourceButton_button__1A0IB\",\"buttonDims\":\"SourceButton_buttonDims__2zegr\",\"addSource\":\"SourceButton_addSource__3b6GP\",\"refreshSource\":\"SourceButton_refreshSource__L3OYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SourcesList_section__1Dwss\",\"message\":\"SourcesList_message__Uxl3r\",\"buttonsWrapper\":\"SourcesList_buttonsWrapper__3m4Oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"NavMenuElement_element__3XeYF\",\"button\":\"NavMenuElement_button__1qALZ\",\"buttonArrow\":\"NavMenuElement_buttonArrow__1nY71\",\"buttonArrowOpen\":\"NavMenuElement_buttonArrowOpen__vyjhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PostTitle_title__AUfcG\",\"postTitle\":\"PostTitle_postTitle__3Hbe7\",\"postTitleShow\":\"PostTitle_postTitleShow__1y1Iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostButton_button__3gCuo\",\"on\":\"PostButton_on__dfo7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"source\":\"Source_source__1Zp-t\",\"sourceShow\":\"Source_sourceShow__5aJL9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavMenu_menu__1haFk\",\"menuOpen\":\"NavMenu_menuOpen__3CT9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"Divider_divider__1FNtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostCardList_content__15L4_\",\"contentFlex\":\"PostCardList_contentFlex__2hHWd\"};","import React from 'react';\n\nconst months = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nconst daysOfWeek = {\n  1: 'Sun',\n  2: 'Mon',\n  3: 'Tue',\n  4: 'Wed',\n  5: 'Thu',\n  6: 'Fri',\n  7: 'Sat'\n};\n\nclass DateTime extends React.Component {\n  render() {\n    let dateFromDb = new Date();\n    if (this.props.timestamp) {\n      dateFromDb = new Date(this.props.timestamp);\n    }\n    let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n    if (dateFromDb.getHours() > 12) {\n      timeToDisplay = `${dateFromDb.getHours() -\n        12}:${dateFromDb.getMinutes()} pm`;\n    }\n    let dateTimeString = `${\n      daysOfWeek[dateFromDb.getDay() + 1]\n    } ${dateFromDb.getDate()} ${\n      months[dateFromDb.getMonth() + 1]\n    } at ${timeToDisplay}`;\n    if (this.props.pre) {\n      dateTimeString = `${this.props.pre} ${dateTimeString}`;\n    }\n    return <div>{dateTimeString}</div>;\n  }\n}\n\nexport default DateTime;\n","import React from 'react';\n\nimport DateTime from '../DateTime';\nimport styles from './TitleBar.module.scss';\n\nexport default class TitleBar extends React.Component {\n  showHome = () => {\n    this.props.toggle('Home');\n  };\n  render() {\n    return (\n      <header className={styles.newsletterHead}>\n        <div className={styles.title} onClick={this.showHome} id=\"title\">\n          The Newsletter\n        </div>\n        <time className={styles.timeStamp}>\n          <DateTime />\n        </time>\n      </header>\n    );\n  }\n}\n","const postUrl =\n  process.env.REACT_APP_API_URL ||\n  'https://the-newsletter-app-back.herokuapp.com/api';\n\nexport function setPosts() {\n  const promise = fetch(`${postUrl}/list`)\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'SET_POSTS',\n    payload: promise\n  };\n}\nexport function updatePost(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'UPDATE_POST',\n    payload: promise\n  };\n}\nexport function updateSource(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'UPDATE_SOURCE',\n    payload: promise\n  };\n}\nexport function refreshPosts() {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: {\n        action: ['post', 'refresh']\n      }\n    })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'REFRESH_POSTS',\n    payload: promise\n  };\n}\nexport function addSource(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'ADD_SOURCE',\n    payload: promise\n  };\n}\nexport function deleteSource(query) {\n  if (query.action && query.id) {\n    const promise = fetch(postUrl, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ query })\n    })\n      .then(r => r)\n      // r.json())\n      .catch(e => {\n        return e;\n      });\n\n    return {\n      type: 'DELETE_SOURCE',\n      payload: promise\n    };\n  } else {\n    return 'Missing action and/or id';\n  }\n}\n\nexport function setSources() {\n  const promise = fetch(`${postUrl}/sources`).then(r => r.json());\n  return {\n    type: 'SET_SOURCES',\n    payload: promise\n  };\n}\n\nexport function selectPost(postId) {\n  const promise = fetch(`${postUrl}/post/${postId}`).then(r => r.json());\n  return {\n    type: 'SELECT_POST',\n    payload: promise\n  };\n}\n\nexport function sourceCreateModule(status) {\n  return {\n    type: 'SHOW_MODULE',\n    payload: status\n  };\n}\n","import React from 'react';\n\nimport style from './PostTitle.module.scss';\nclass PostTitle extends React.Component {\n  handleClick = () => {\n    this.props.titleClick();\n  };\n  render() {\n    let postTitleStyle = style.postTitle;\n    if (this.props.mode === 'show') {\n      postTitleStyle = style.postTitleShow;\n    }\n    return (\n      <header onClick={this.handleClick} className={postTitleStyle}>\n        {this.props.postTitle}\n      </header>\n    );\n  }\n}\nexport default PostTitle;\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { updatePost } from '../../../actions';\n\nimport style from './PostButton.module.scss';\n\nclass PostButton extends React.Component {\n  updatePost = () => {\n    let action = '';\n    switch (this.props.type) {\n      case 'star':\n        action = ['post', 'update'];\n        break;\n      default:\n        action = ['post', 'delete'];\n        break;\n    }\n    let fields = {};\n    fields[`${this.props.type}`] = !this.props.value;\n    const query = { id: this.props.postId, action: action, fields: fields };\n    this.props.updatePost(query);\n    if (this.props.toggle) {\n      this.props.toggle('Home');\n    }\n  };\n\n  render() {\n    let button = '⊗';\n    let buttonStyle = style.button;\n    switch (this.props.type) {\n      case 'star':\n        button = '★';\n        if (this.props.value) {\n          buttonStyle = style.on;\n        }\n        break;\n      default:\n        break;\n    }\n    return (\n      <button className={buttonStyle} onClick={this.updatePost}>\n        {button}\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePost: updatePost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    updatePost: state.updatePost\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostButton);\n","import React from 'react';\n\nimport style from './Source.module.scss';\nclass Source extends React.Component {\n  render() {\n    let sourceStyle = style.source;\n    if (this.props.mode === 'show') {\n      sourceStyle = style.sourceShow;\n    }\n    return <div className={sourceStyle}>@ {this.props.source}</div>;\n  }\n}\nexport default Source;\n","const ApproxVolume = props => {\n  return `~${props.volume} ${props.units}`;\n};\n\nexport default ApproxVolume;\n","import React from 'react';\n\nimport style from './Divider.module.scss';\nclass Divider extends React.Component {\n  render() {\n    return <div className={style.divider} />;\n  }\n}\nexport default Divider;\n","import React from 'react';\n\nimport PostTitle from '../PostTitle/PostTitle';\nimport PostButton from '../../containers/Posts/PostButton/PostButton';\nimport Source from '../Source/Source';\nimport DateTime from '../DateTime';\nimport ApproxVolume from '../ApproxVolume';\nimport Divider from '../Divider/Divider';\nimport style from './PostCard.module.scss';\n\nclass PostCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = () => {\n    this.props.selector(this.props.post._id);\n  };\n\n  render() {\n    const text = `${this.props.post.text.replace(/<(?:.|\\n)*?>/gm, ' ')}...`;\n    let bodyClass = '';\n    if (this.props.post.read) {\n      bodyClass = style.bodyRead;\n    } else {\n      bodyClass = style.body;\n    }\n    return (\n      <section className={bodyClass} key={this.props.post._id}>\n        <PostTitle\n          mode=\"card\"\n          titleClick={this.handleClick}\n          postTitle={this.props.post.title}\n        />\n        <section className={style.secondLine}>\n          <Source mode=\"card\" source={this.props.post.source} />\n          <PostButton\n            type=\"star\"\n            value={this.props.post.star}\n            postId={this.props.post._id}\n          />\n        </section>\n        <section\n          className={style.text}\n          onClick={this.handleClick}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <footer className={style.statusLine}>\n          <DateTime timestamp={new Date(this.props.post.published)} />\n          <ApproxVolume\n            volume={this.props.post.readTime}\n            units=\"mins\"\n            mode=\"card\"\n          />\n        </footer>\n        <Divider />\n      </section>\n    );\n  }\n}\n\nexport default PostCard;\n","import React from 'react';\n\nimport style from './Error.module.scss';\n\nconst error = props => {\n  return (\n    <main className={style.errorWrapper}>\n      <p className={style.errorTitle}>ERROR</p>\n      <p className={style.error}>{props.message}</p>\n    </main>\n  );\n};\n\nexport default error;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setPosts } from '../../actions';\nimport { selectPost } from '../../actions';\n\nimport PostCard from '../../components/Posts/PostCard';\nimport style from './PostCardList.module.scss';\nimport Error from '../../components/Error/Error';\n\nclass PostCardList extends React.Component {\n  componentWillMount() {\n    this.fetchPosts();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchPosts, 5000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchPosts = () => {\n    this.props.setPosts().then(data => {});\n  };\n  selectPostToShow = postId => {\n    this.props.selectPost(postId).then(data => {\n      this.props.showPost(data);\n    });\n  };\n  render() {\n    const message = this.props.posts.message;\n    if (message) {\n      return <Error message={message} />;\n    }\n    return (\n      <div className={style.content}>\n        {this.props.posts.map(post => {\n          return (\n            <PostCard\n              selector={this.selectPostToShow}\n              post={post}\n              key={post._id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setPosts, selectPost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCardList);\n","import React from 'react';\n\nimport style from './SourceButton.module.scss';\n\nclass SourceButton extends React.Component {\n  handleClick = () => {\n    if (this.props.type === 'add') this.props.show('');\n    if (this.props.type === 'delete') this.props.sourceDelete('');\n    if (this.props.type === 'refresh') this.props.refresh('');\n    if (this.props.type === 'edit')\n      this.props.toggleEditSource(this.props.sourceId);\n  };\n  render() {\n    let button = 'Add Source';\n    let buttonStyle = style.button;\n    switch (this.props.type) {\n      case 'edit':\n        button = '✎';\n        break;\n      case 'refresh':\n        button = 'Refresh';\n        buttonStyle = style.refreshSource;\n        break;\n      case 'add':\n        buttonStyle = style.addSource;\n        break;\n      default:\n        button = '⌦';\n    }\n    return (\n      <button className={buttonStyle} onClick={this.handleClick}>\n        {button}\n      </button>\n    );\n  }\n}\n\nexport default SourceButton;\n","import React from 'react';\n\nimport style from './SourceCreate.module.scss';\n\nclass SourceCreate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.source) {\n      this.state = {\n        name: props.source.name,\n        url: props.source.url,\n        home: props.source.home\n      };\n    } else {\n      this.state = {\n        name: '',\n        url: '',\n        home: ''\n      };\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let change = {};\n    let field = event.target.name;\n    change[field] = event.target.value;\n    this.setState(change);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    // form values\n    const values = {\n      name: event.target[0].value,\n      url: event.target[1].value,\n      home: event.target[2].value\n    };\n    // if module mode Update\n    if (this.props.mode === 'Update') {\n      // are these old values?\n      const oldValues =\n        values.name === this.props.source.name &&\n        values.url === this.props.source.url &&\n        values.home === this.props.source.home;\n      // if no, then process\n      if (!oldValues) {\n        const query = { id: this.props.source._id, values: values };\n        this.props.toggleEditSource();\n        this.props.updateSource(query);\n        // otherwise, just close\n      } else {\n        this.props.toggleEditSource();\n      }\n      // if module mode Create\n    } else if (this.props.mode === 'Create') {\n      this.props.toggle();\n      this.props.create(values);\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={style.createForm}>\n        <label>\n          <div className={style.labelTitle}>Name</div>\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>URL</div>\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>Homepage</div>\n          <input\n            type=\"text\"\n            name=\"home\"\n            value={this.state.home}\n            onChange={this.handleChange}\n          />\n        </label>\n        <div className={style.center}>\n          <button\n            className={style.submit}\n            as=\"input\"\n            type=\"submit\"\n            value=\"Submit\"\n          >\n            {this.props.mode}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SourceCreate;\n","import React from 'react';\n\nimport SourceButton from './SourceButton/SourceButton';\nimport SourceCreate from '../../containers/Sources/SourceCreate/SourceCreate';\nimport style from './SourceCard.module.scss';\n\nclass SourceCard extends React.Component {\n  sourceDelete = () => {\n    this.props.sourceDelete(this.props.source._id);\n  };\n  render() {\n    let showEdit = false;\n    if (\n      this.props.showEditSourceId === this.props.source._id &&\n      this.props.showEdit\n    )\n      showEdit = true;\n    return (\n      <section className={style.sectionWrapper}>\n        <div className={style.section}>\n          <section className={style.nameWrapper}>\n            <p onClick={this.goHome} className={style.name}>\n              {this.props.source.name}\n            </p>\n            <p className={style.url}>{this.props.source.url}</p>\n          </section>\n          <section className={style.buttonsWrapper}>\n            <SourceButton\n              type=\"edit\"\n              toggleEditSource={this.props.toggleEditSource}\n              sourceId={this.props.source._id}\n            />\n            <SourceButton type=\"delete\" sourceDelete={this.sourceDelete} />\n          </section>\n        </div>\n        {showEdit ? (\n          <SourceCreate\n            mode=\"Update\"\n            toggleEditSource={this.props.toggleEditSource}\n            source={this.props.source}\n            updateSource={this.props.updateSource}\n          />\n        ) : null}\n      </section>\n    );\n  }\n}\n\nexport default SourceCard;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setSources } from '../../actions';\nimport { addSource } from '../../actions';\nimport { deleteSource } from '../../actions';\nimport { refreshPosts } from '../../actions';\nimport { updateSource } from '../../actions';\n\nimport SourceCard from '../../components/Sources/SourceCard';\nimport SourceButton from '../../components/Sources/SourceButton/SourceButton';\nimport SourceCreate from './SourceCreate/SourceCreate';\nimport style from './SourcesList.module.scss';\n\nclass SourcesList extends React.Component {\n  state = {\n    showAddSource: false,\n    showEditSource: false,\n    showEditSourceId: '',\n    message: ''\n  };\n\n  toggleAddSource = () => {\n    // if Edit Source component open - close it\n    if (this.state.showEditSource)\n      this.setState({\n        showEditSource: false,\n        showEditSourceId: ''\n      });\n    this.setState(state => ({\n      showAddSource: !this.state.showAddSource\n    }));\n  };\n\n  toggleEditSource = id => {\n    console.log(id);\n    console.log(this.state.showEditSource);\n    console.log(this.state.showEditSourceId);\n    // if Add Source component open - close it\n    if (this.state.showAddSource) this.setState({ showAddSource: false });\n    // if Show Edit is true and ...\n    if (this.state.showEditSource) {\n      // ... there is same ID - close it\n      if (id === this.state.showEditSourceId) {\n        this.setState({\n          showEditSource: !this.state.showEditSource,\n          showEditSourceId: id\n        });\n        // ... this is different ID - open the other one\n      } else if (id && id !== this.state.showEditSourceId) {\n        this.setState({\n          showEditSource: true,\n          showEditSourceId: id\n        });\n      } else {\n        this.setState({\n          showEditSource: false,\n          showEditSourceId: ''\n        });\n      }\n    }\n    // if Show Edit is false\n    else {\n      this.setState({\n        showEditSource: true,\n        showEditSourceId: id\n      });\n    }\n  };\n\n  changeMessage = message => {\n    this.setState({ message: message });\n    setTimeout(this.clearMessage, 3000);\n  };\n\n  componentWillMount() {\n    this.fetchSources();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchSources, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchSources = () => {\n    this.props.setSources();\n  };\n\n  clearMessage = () => {\n    this.setState({ message: '' });\n  };\n\n  createSource = fields => {\n    if (fields.name === '' || fields.home === '' || fields.url === '')\n      this.changeMessage('Not enough info. Source not created.');\n    const request = { action: ['source', 'create'], fields };\n    this.props.addSource(request);\n  };\n\n  updateSource = fields => {\n    if (\n      fields.values.name === '' ||\n      fields.values.home === '' ||\n      fields.values.url === '' ||\n      fields.values.id === ''\n    )\n      this.changeMessage('Not enough info. Source not created.');\n    const request = {\n      action: ['source', 'update'],\n      id: fields.id,\n      fields: fields.values\n    };\n    this.props.updateSource(request);\n  };\n\n  sourceDelete = id => {\n    const request = { action: ['source', 'delete'], id: id };\n    this.props.deleteSource(request);\n    this.fetchSources();\n  };\n\n  handleRefreshPosts = () => {\n    this.props.refreshPosts();\n  };\n\n  render() {\n    return (\n      <section className={style.section}>\n        <div className={style.buttonsWrapper}>\n          {this.props.sources.length > 0 ? (\n            <SourceButton\n              type=\"refresh\"\n              refresh={this.handleRefreshPosts}\n              name=\"Refresh\"\n            />\n          ) : null}\n          <SourceButton\n            type=\"add\"\n            show={this.toggleAddSource}\n            name=\"Add Source\"\n          />\n        </div>\n        {this.state.showAddSource ? (\n          <SourceCreate\n            mode=\"Create\"\n            create={this.createSource}\n            toggle={this.toggleAddSource}\n          />\n        ) : null}\n        {this.state.message === '' ? null : (\n          <div className={style.message}>{this.state.message}</div>\n        )}\n        {this.props.sources.map(source => {\n          return (\n            <SourceCard\n              source={source}\n              key={source._id}\n              sourceDelete={this.sourceDelete}\n              showEdit={this.state.showEditSource}\n              showEditSourceId={this.state.showEditSourceId}\n              toggleEditSource={this.toggleEditSource}\n              updateSource={this.updateSource}\n            />\n          );\n        })}\n      </section>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { setSources, addSource, deleteSource, refreshPosts, updateSource },\n    dispatch\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    sources: state.sources,\n    addSource: state.addSource,\n    deleteSource: state.deleteSource,\n    refreshPosts: refreshPosts,\n    updateSource: updateSource\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SourcesList);\n","import React from 'react';\n\nimport PostTitle from '../PostTitle/PostTitle';\nimport Source from '../Source/Source';\nimport PostButton from '../../containers/Posts/PostButton/PostButton';\nimport DateTime from '../DateTime';\nimport ApproxVolume from '../ApproxVolume';\nimport Divider from '../Divider/Divider';\nimport style from './PostShow.module.scss';\n\nclass PostShow extends React.Component {\n  handleClick = () => {\n    window.open(this.props.post.url, '_blank');\n  };\n\n  componentDidMount = () => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    let author = '';\n    if (!this.props.post.author) {\n      author = '';\n    } else {\n      author = `by ${this.props.post.author}`;\n    }\n    // const publishedDate = dateTime();\n\n    // const parsedDate = dateTime(new Date(this.props.post.parsed));\n    return (\n      <article className={style.body}>\n        <PostTitle\n          mode=\"show\"\n          titleClick={this.handleClick}\n          postTitle={this.props.post.title}\n        />\n        <div className={style.secondLine}>\n          <div className={style.sourceAuthorWrapper}>\n            <div className={style.author}>{author}</div>\n            <Source mode=\"show\" source={this.props.post.source} />\n          </div>\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.props.post.star}\n              postId={this.props.post._id}\n            />\n            <PostButton\n              type=\"delete\"\n              postId={this.props.post._id}\n              toggle={this.props.toggle}\n            />\n          </div>\n        </div>\n        <section\n          className={style.text}\n          dangerouslySetInnerHTML={{\n            __html: this.props.post.text\n          }}\n        />\n        <Divider />\n        <footer className={style.statusLine}>\n          <DateTime\n            pre=\"published:\"\n            timestamp={new Date(this.props.post.published)}\n            mode=\"show\"\n          />\n          <DateTime\n            pre=\"parsed:\"\n            timestamp={new Date(this.props.post.parsed)}\n            mode=\"show\"\n          />\n          <ApproxVolume volume={this.props.post.pages} units=\"pages\" />\n        </footer>\n      </article>\n    );\n  }\n}\n\nexport default PostShow;\n","import React from 'react';\n\nimport PostCardList from './Posts/PostCardList';\nimport SourcesList from './Sources/SourcesList';\nimport PostShow from '../components/Posts/PostShow';\n\nclass ContentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {}\n    };\n  }\n\n  setPostToShow = post => {\n    this.setState({ post: post.payload });\n    this.props.toggle('show');\n  };\n\n  render() {\n    switch (this.props.show) {\n      case 'Home':\n        return <PostCardList showPost={this.setPostToShow} />;\n      case 'show':\n        return <PostShow post={this.state.post} toggle={this.props.toggle} />;\n      case 'Sources':\n        return <SourcesList />;\n      default:\n        return <PostCardList />;\n    }\n  }\n}\n\nexport default ContentDisplay;\n","import React from 'react';\n\nimport style from './NavMenuElement.module.scss';\n\nclass NavMenuElement extends React.Component {\n  handleClick = () => {\n    if (this.props.name !== 'toggle') {\n      this.props.options.menuOpen('');\n      this.props.options.show(this.props.name);\n    } else {\n      this.props.options.menuOpen('');\n    }\n  };\n\n  render() {\n    let elementStyle = style.button;\n    let button = this.props.name;\n    if (button === 'toggle') {\n      button = '⋮';\n      if (this.props.options.menuStatus) {\n        elementStyle = style.buttonArrowOpen;\n      } else {\n        elementStyle = style.buttonArrow;\n      }\n    }\n    return (\n      <div onClick={this.handleClick} className={elementStyle}>\n        {button}\n      </div>\n    );\n  }\n}\n\nexport default NavMenuElement;\n","import React from 'react';\n\nimport NavMenuElement from './NavMenuElement';\nimport style from './NavMenu.module.scss';\n\nclass NavMenu extends React.Component {\n  render() {\n    let menuStyle = style.menu;\n    if (this.props.options.menuStatus) menuStyle = style.menuOpen;\n    return (\n      <nav className={menuStyle}>\n        <NavMenuElement options={this.props.options} name=\"toggle\" />\n        <NavMenuElement options={this.props.options} name=\"Home\" />\n        <NavMenuElement options={this.props.options} name=\"Sources\" />\n      </nav>\n    );\n  }\n}\n\nexport default NavMenu;\n","import React from 'react';\n\nimport TitleBar from '../../components/TitleBar/TitleBar';\nimport ContentDisplay from '../ContentDisplay';\nimport NavMenu from '../../components/NavMenu/NavMenu';\n\nclass App extends React.Component {\n  state = {\n    module: 'Home',\n    menuOpen: false\n  };\n  showModule = module => {\n    this.setState(state => ({ module: module }));\n  };\n  menuOpen = () => {\n    this.setState({\n      menuOpen: !this.state.menuOpen\n    });\n  };\n\n  render() {\n    const options = {\n      show: this.showModule,\n      menuOpen: this.menuOpen,\n      menuStatus: this.state.menuOpen\n    };\n    return (\n      <main>\n        <TitleBar toggle={this.showModule} />\n        <ContentDisplay show={this.state.module} toggle={this.showModule} />\n        <NavMenu options={options} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\n// reducers\nimport postsReducer from './reducers/posts_reducer';\nimport sourcesReducer from './reducers/sources_reducer';\nimport addSourceReducer from './reducers/add_source_reducer';\nimport updatePostReducer from './reducers/update_post_reducer';\nimport updateSourceReducer from './reducers/update_source_reducer';\nimport refreshPostsReducer from './reducers/refresh_posts_reducer';\nimport selectPostReducer from './reducers/select_post_reducer';\nimport deleteSourceReducer from './reducers/delete_source_reducer';\nimport sourceCreateModuleReducer from './reducers/source_create_module_reducer.js';\n\nimport WebFont from 'webfontloader';\n\n// load components\nimport App from './containers/App/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: ['Aleo:300,300i,400,400i,700', 'IBM Plex Mono:300,400']\n  }\n});\n\nconst initialState = {\n  posts: [],\n  sources: [],\n  addSource: '',\n  updatePost: '',\n  selectPost: '',\n  sourceCreateModule: true,\n  deleteSource: '',\n  refreshPostsReducer: ''\n};\n\n// Define reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  sources: sourcesReducer,\n  addSource: addSourceReducer,\n  selectPost: selectPostReducer,\n  updatePost: updatePostReducer,\n  updateSource: updateSourceReducer,\n  deleteSource: deleteSourceReducer,\n  refreshPostsReducer: refreshPostsReducer,\n  sourceCreateModule: sourceCreateModuleReducer\n});\n// Add logger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(reduxPromise, logger));\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'ADD_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'DELETE_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SHOW_MODULE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n"],"sourceRoot":""}