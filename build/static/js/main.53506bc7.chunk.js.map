{"version":3,"sources":["containers/NavMenu/NavMenuElement.module.scss","components/TitleBar/TitleBar.module.scss","elements/PostButton/PostButton.module.scss","containers/Posts/PostCardList.module.scss","components/NavMenu/NavMenu.module.scss","components/TitleBar/DateTime.js","components/TitleBar/TitleBar.js","actions/index.js","elements/PostButton/PostButton.js","modules/date_time.js","containers/Posts/PostCard.js","containers/Posts/PostCardList.js","containers/Sources/SourcesList.js","components/Posts/PostShow.js","containers/ContentDisplay.js","containers/NavMenu/NavMenuElement.js","components/NavMenu/NavMenu.js","components/App/App.js","serviceWorker.js","index.js","reducers/posts_reducer.js","reducers/sources_reducer.js","reducers/select_post_reducer.js","reducers/select_module_reducer.js","components/Posts/PostShow.module.scss","containers/Posts/PostCard.module.scss"],"names":["module","exports","element","elementArrow","button","buttonArrow","newsletterHead","title","timeStamp","regular","on","delete","content","contentFlex","divider","menu","currentTimestamp","props","hours","d","Date","minutes","getMinutes","toString","length","ampm","getHours","getDay","getMonth","getDate","getFullYear","TitleBar","react_default","a","createElement","className","styles","id","DateTime","React","Component","setPosts","postsUrl","concat","process","type","payload","fetch","then","r","json","setSources","sourcesUrl","selectPost","post","selectModule","postButton","buttonStyle","value","style","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateTime","dateFromDb","timeToDisplay","PostCard","handleClick","_this","text","this","substring","replace","bodyClass","read","bodyRead","body","publishedDate","published","readTime","Math","round","onClick","secondLine","author","PostButton","star","dangerouslySetInnerHTML","__html","statusLine","connect","state","dispatch","bindActionCreators","PostCardList","fetchMessages","refresher","setInterval","clearInterval","posts","map","key","Posts_PostCard","SourcesList","fetchSources","console","log","sources","source","name","postShow","parsedDate","parsed","pages","url","window","open","buttonsWrapper","ContentDisplay","nextProps","newModule","newSelectPost","selected","Posts_PostCardList","PostShow","Sources_SourcesList","NavMenuElement","NavMenu","NavMenu_NavMenuElement","App","TitleBar_TitleBar","containers_ContentDisplay","components_NavMenu_NavMenu","Boolean","location","hostname","match","WebFont","load","google","families","reducers","combineReducers","arguments","undefined","action","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxPromise","logger","ReactDOM","render","es","store","createStore","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","article-source","article-footer","article-link","star-on","bodyFlex"],"mappings":"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","file":"static/js/main.53506bc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"NavMenuElement_element__w4ZCy\",\"elementArrow\":\"NavMenuElement_elementArrow__sb4z6\",\"button\":\"NavMenuElement_button__2Xv5j\",\"buttonArrow\":\"NavMenuElement_buttonArrow__1B7LK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsletterHead\":\"TitleBar_newsletterHead__Zupct\",\"title\":\"TitleBar_title__3MWB3\",\"timeStamp\":\"TitleBar_timeStamp__wN8_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostButton_button__1Coz8\",\"regular\":\"PostButton_regular__3XV0H\",\"on\":\"PostButton_on__xdHSN\",\"delete\":\"PostButton_delete__2qrbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostCardList_content__15L4_\",\"contentFlex\":\"PostCardList_contentFlex__2hHWd\",\"divider\":\"PostCardList_divider__37TCh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavMenu_menu__1haFk\"};","const currentTimestamp = props => {\n  var hours = 0;\n  var d = new Date(),\n    minutes =\n      d.getMinutes().toString().length === 1\n        ? '0' + d.getMinutes()\n        : d.getMinutes(),\n    ampm = d.getHours() >= 12 ? 'pm' : 'am',\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ],\n    days = [\n      'Sunday',\n      'Monday',\n      'Tueday',\n      'Wedday',\n      'Thuday',\n      'Friday',\n      'Saturday'\n    ];\n  if (d.getHours() === 0) {\n    hours = 12;\n  } else if (d.getHours() > 12) {\n    hours = d.getHours() - 12;\n  } else {\n    hours = d.getHours();\n  }\n  return (\n    days[d.getDay()] +\n    ', ' +\n    months[d.getMonth()] +\n    ' ' +\n    d.getDate() +\n    ', ' +\n    d.getFullYear() +\n    ' | ' +\n    hours +\n    ':' +\n    minutes +\n    ampm\n  );\n};\n\nexport default currentTimestamp;\n","import React from 'react';\n\nimport DateTime from './DateTime';\nimport styles from './TitleBar.module.scss';\n\nexport default class TitleBar extends React.Component {\n  render() {\n    return (\n      <div className={styles.newsletterHead}>\n        <div className={styles.title} id=\"title\">\n          The Newsletter\n        </div>\n        <div className={styles.timeStamp}>\n          <DateTime />\n        </div>\n      </div>\n    );\n  }\n}\n","export function setPosts() {\n  const postsUrl = `${process.env.REACT_APP_API_URL}/sources/freeCodeCamp`;\n  const promise = fetch(postsUrl).then(r => r.json());\n\n  return {\n    type: 'SET_POSTS',\n    payload: promise\n  };\n}\nexport function setSources() {\n  const sourcesUrl = `${process.env.REACT_APP_API_URL}/sources/list`;\n  const promise = fetch(sourcesUrl).then(r => r.json());\n  return {\n    type: 'SET_SOURCES',\n    payload: promise\n  };\n}\n\nexport function selectPost(post) {\n  return {\n    type: 'SELECT_POST',\n    payload: post\n  };\n}\n\nexport function selectModule(module) {\n  return {\n    type: 'SELECT_MODULE',\n    payload: module\n  };\n}\n","import React from 'react';\n\nimport style from './PostButton.module.scss';\n\nconst postButton = props => {\n  let button = '';\n  let buttonStyle = '';\n  switch (props.type) {\n    case 'star':\n      button = 'fas fa-star';\n      if (props.value) {\n        buttonStyle = style.on;\n      } else {\n        buttonStyle = style.regular;\n      }\n      break;\n    default:\n      button = 'far fa-trash-alt';\n      buttonStyle = style.delete;\n  }\n  return (\n    <div className={buttonStyle}>\n      <i className={button} />\n    </div>\n  );\n};\n\nexport default postButton;\n","const months = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nconst daysOfWeek = {\n  1: 'Sun',\n  2: 'Mon',\n  3: 'Tue',\n  4: 'Wed',\n  5: 'Thu',\n  6: 'Fri',\n  7: 'Sat'\n};\n\nconst dateTime = props => {\n  const dateFromDb = new Date(props);\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { selectPost } from '../../actions';\nimport { selectModule } from '../../actions';\n\nimport PostButton from '../../elements/PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostCard.module.scss';\n\nclass PostCard extends React.Component {\n  handleClick = () => {\n    this.props.selectPost(this.props.post);\n    this.props.selectModule('show');\n  };\n  render() {\n    const text = this.props.post.text\n      .substring(0, 800)\n      .replace(/<(?:.|\\n)*?>/gm, '');\n    let bodyClass = '';\n    if (this.props.post.read) {\n      bodyClass = style.bodyRead;\n    } else {\n      bodyClass = style.body;\n    }\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    const readTime = Math.round((this.props.post.text.length / 3000) * 2);\n    return (\n      <div className={bodyClass} onClick={this.handleClick}>\n        <div className={style.title}>{this.props.post.title}</div>\n        {/* <div >{props.post.url}</div> */}\n        <div className={style.secondLine}>\n          <div className={style.author}>by {this.props.post.author}</div>\n          <PostButton type=\"star\" value={this.props.post.star} />\n        </div>\n        <div\n          className={style.text}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <div className={style.statusLine}>\n          <div>{publishedDate}</div>\n          <div>~ {readTime} mins</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { selectPost: selectPost, selectModule: selectModule },\n    dispatch\n  );\n};\n\n// ! changed selectedPost to selectPost\nconst mapStateToProps = state => {\n  return {\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCard);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setPosts } from '../../actions';\n\nimport PostCard from './PostCard';\nimport style from './PostCardList.module.scss';\n\nclass PostCardList extends React.Component {\n  componentWillMount() {\n    this.fetchMessages();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchMessages, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchMessages = () => {\n    this.props.setPosts();\n  };\n\n  render() {\n    return (\n      <div className={style.content}>\n        {this.props.posts.map(post => {\n          return (\n            <div key={post.title}>\n              <PostCard post={post} />\n              <div className={style.divider} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setPosts }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCardList);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setSources } from '../../actions';\n\nimport style from './SourcesList.module.scss';\n\nclass SourcesList extends React.Component {\n  componentWillMount() {\n    this.fetchSources();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchSources, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchSources = () => {\n    this.props.setSources();\n  };\n  render() {\n    console.log();\n    return (\n      <div>\n        {this.props.sources.map(source => {\n          return <div key={source.name}>{source.name}</div>;\n        })}\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setSources }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    sources: state.sources\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SourcesList);\n","import React from 'react';\n\nimport PostButton from '../../elements/PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostShow.module.scss';\n\nconst handleClick = url => {\n  window.open(url, '_blank');\n};\n\nconst postShow = props => {\n  const text = props.post.text;\n  const publishedDate = dateTime(new Date(props.post.published));\n  const parsedDate = dateTime(new Date(props.post.parsed));\n  const pages = Math.round(props.post.text.length / 3000);\n  return (\n    <div>\n      <div className={style.body}>\n        <div\n          className={style.title}\n          onClick={() => handleClick(props.post.url)}\n        >\n          {props.post.title}\n        </div>\n        <div className={style.secondLine}>\n          <div className={style.author}>by {props.post.author}</div>\n          <div className={style.buttonsWrapper}>\n            <PostButton type=\"star\" value={props.post.star} />\n            <PostButton type=\"delete\" />\n          </div>\n        </div>\n        <div\n          className={style.text}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <div className={style.divider} />\n        <div className={style.statusLine}>\n          <div>published: {publishedDate}</div>\n          <div>parsed: {parsedDate}</div>\n          <div>~ {pages} pages</div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default postShow;\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setPosts } from '../actions';\n\nimport PostCardList from './Posts/PostCardList';\nimport SourcesList from './Sources/SourcesList';\nimport PostShow from '../components/Posts/PostShow';\n\nimport style from './ContentDisplay.module.scss';\n\nclass ContentDisplay extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const newModule = this.props.selectModule !== nextProps.selectModule;\n    const newSelectPost = this.props.selectPost !== nextProps.selectPost;\n    // const differentDone = this.props.done !== nextProps.done\n    return newModule || newSelectPost;\n    // return newModule || differentDone;\n  }\n\n  render() {\n    // const postId = '5c96634c1580d234f5a062d2';\n    const selected = this.props.selectPost;\n    const display = this.props.selectModule;\n    switch (display) {\n      case 'Home':\n        return (\n          <div className={style.content}>\n            <PostCardList />\n          </div>\n        );\n      case 'show':\n        return (\n          <div className={style.content}>\n            <PostShow post={selected} />\n          </div>\n        );\n      case 'Sources':\n        return (\n          <div className={style.content}>\n            <SourcesList />\n          </div>\n        );\n      default:\n        return (\n          <div className={style.content}>\n            <PostCardList />\n          </div>\n        );\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setPosts }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContentDisplay);\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { selectModule } from '../../actions';\n\nimport style from './NavMenuElement.module.scss';\n\nclass NavMenuElement extends React.Component {\n  handleClick = () => {\n    this.props.selectModule(this.props.name);\n  };\n\n  render() {\n    if (this.props.name === 'arrow') {\n      const classStyle = 'fas fa-chevron-left';\n      return (\n        <div className={style.elementArrow} onClick={this.handleClick}>\n          <div className={style.buttonArrow}>\n            <i className={classStyle} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={style.element} onClick={this.handleClick}>\n          <div className={style.button}>{this.props.name}</div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ selectModule: selectModule }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavMenuElement);\n","import React from 'react';\n\nimport NavMenuElement from '../../containers/NavMenu/NavMenuElement';\nimport style from './NavMenu.module.scss';\n\nclass NavMenu extends React.Component {\n  render() {\n    return (\n      <div className={style.menu}>\n        <NavMenuElement name=\"arrow\" />\n        <NavMenuElement name=\"Home\" />\n        <NavMenuElement name=\"Sources\" />\n      </div>\n    );\n  }\n}\n\nexport default NavMenu;\n","import React from 'react';\n\nimport TitleBar from '../TitleBar/TitleBar';\nimport ContentDisplay from '../../containers/ContentDisplay';\nimport NavMenu from '../NavMenu/NavMenu';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <TitleBar />\n        <ContentDisplay />\n        <NavMenu />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\n// reducers\nimport postsReducer from './reducers/posts_reducer';\nimport sourcesReducer from './reducers/sources_reducer';\nimport selectPostReducer from './reducers/select_post_reducer';\nimport selectModuleReducer from './reducers/select_module_reducer';\n\nimport WebFont from 'webfontloader';\n\n// load components\nimport App from './components/App/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: ['Aleo:300,300i,400,400i,700']\n  }\n});\n\nconst initialState = {\n  posts: [],\n  sources: [],\n  selectPost: '',\n  selectModule: 'Home'\n};\n\n// Define reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  sources: sourcesReducer,\n  selectPost: selectPostReducer,\n  selectModule: selectModuleReducer\n});\n// Add logger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(reduxPromise, logger));\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_MODULE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostShow_body__1NQ_n\",\"title\":\"PostShow_title__2HfCj\",\"secondLine\":\"PostShow_secondLine__9dJW5\",\"author\":\"PostShow_author__1S4ap\",\"buttonsWrapper\":\"PostShow_buttonsWrapper__10ox5\",\"text\":\"PostShow_text__27vjt\",\"divider\":\"PostShow_divider__zhco3\",\"statusLine\":\"PostShow_statusLine__3higE\",\"article-source\":\"PostShow_article-source__2KA0z\",\"article-footer\":\"PostShow_article-footer__1k8bK\",\"article-link\":\"PostShow_article-link__niuoa\",\"star\":\"PostShow_star__1y8C8\",\"star-on\":\"PostShow_star-on__sPcDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostCard_body__3hbvz\",\"bodyFlex\":\"PostCard_bodyFlex__1TYUE\",\"bodyRead\":\"PostCard_bodyRead__1JMP2\",\"title\":\"PostCard_title__131Au\",\"secondLine\":\"PostCard_secondLine__KD5pA\",\"text\":\"PostCard_text__2kRll\",\"statusLine\":\"PostCard_statusLine__1d_h8\",\"article-source\":\"PostCard_article-source__2ziug\",\"article-footer\":\"PostCard_article-footer__1VmEy\",\"article-link\":\"PostCard_article-link__3_XOZ\",\"star\":\"PostCard_star__3DrTG\",\"star-on\":\"PostCard_star-on__143ak\"};"],"sourceRoot":""}