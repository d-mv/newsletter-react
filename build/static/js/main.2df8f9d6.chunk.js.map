{"version":3,"sources":["containers/Sources/SourceCreate/SourceCreate.module.scss","components/Sources/SourceCard.module.scss","components/TitleBar/TitleBar.module.scss","components/Error/Error.module.scss","components/Sources/SourceButton/SourceButton.module.scss","containers/Sources/SourcesList.module.scss","components/NavMenu/NavMenuElement.module.scss","containers/Posts/PostButton/PostButton.module.scss","components/NavMenu/NavMenu.module.scss","containers/Posts/PostCardList.module.scss","components/TitleBar/DateTime.js","components/TitleBar/TitleBar.js","actions/index.js","containers/Posts/PostButton/PostButton.js","modules/date_time.js","containers/Posts/PostCard.js","components/Error/Error.js","containers/Posts/PostCardList.js","components/Sources/SourceButton/SourceButton.js","containers/Sources/SourceCreate/SourceCreate.js","components/Sources/SourceCard.js","containers/Sources/SourcesList.js","components/Posts/PostShow.js","components/ContentDisplay.js","components/NavMenu/NavMenuElement.js","components/NavMenu/NavMenu.js","components/App/App.js","serviceWorker.js","index.js","reducers/posts_reducer.js","reducers/sources_reducer.js","reducers/add_source_reducer.js","reducers/select_post_reducer.js","reducers/update_post_reducer.js","reducers/update_source_reducer.js","reducers/delete_source_reducer.js","reducers/refresh_posts_reducer.js","reducers/source_create_module_reducer.js","containers/Posts/PostCard.module.scss","components/Posts/PostShow.module.scss"],"names":["module","exports","createForm","openForm","labelTitle","createFields","center","sectionWrapper","section","nameWrapper","name","url","buttonsWrapper","newsletterHead","title","timeStamp","errorWrapper","errorTitle","error","button","buttonDims","addSource","refreshSource","message","element","buttonArrow","buttonArrowOpen","on","menu","menuOpen","content","contentFlex","currentTimestamp","props","hours","d","Date","minutes","getMinutes","toString","length","ampm","getHours","getDay","getMonth","getDate","getFullYear","TitleBar","showHome","_this","toggle","react_default","a","createElement","className","styles","onClick","this","id","DateTime","React","Component","postUrl","process","REACT_APP_API_URL","setPosts","type","payload","fetch","concat","then","r","json","catch","e","updatePost","query","method","headers","Accept","Content-Type","body","JSON","stringify","updateSource","refreshPosts","action","deleteSource","setSources","selectPost","postId","PostButton","fields","value","buttonStyle","style","connect","state","dispatch","bindActionCreators","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateTime","dateFromDb","Object","keys","timeToDisplay","PostCard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","selector","post","_id","bind","assertThisInitialized","text","replace","bodyClass","read","bodyRead","publishedDate","published","key","secondLine","source","Posts_PostButton_PostButton","star","dangerouslySetInnerHTML","__html","statusLine","readTime","divider","PostCardList","fetchMessages","data","selectPostToShow","showPost","refresher","setInterval","window","scrollTo","clearInterval","_this2","posts","Error","map","Posts_PostCard","selectModule","SourceButton","show","sourceDelete","refresh","toggleEdit","SourceCreate","home","handleChange","handleSubmit","event","change","target","setState","preventDefault","values","mode","create","console","log","onSubmit","input","onChange","submit","as","SourceCard","goHome","Sources_SourceButton_SourceButton","showEdit","Sources_SourceCreate_SourceCreate","SourcesList","showAddSource","showEditSource","toggleAddSource","toggleEditSource","changeMessage","setTimeout","clearMessage","fetchSources","createSource","request","handleRefreshPosts","sources","Sources_SourceCard","PostShow","open","componentDidMount","author","parsedDate","parsed","pages","ContentDisplay","setPostToShow","Posts_PostCardList","Posts_PostShow","Sources_SourcesList","NavMenuElement","options","elementStyle","menuStatus","NavMenu","menuStyle","NavMenu_NavMenuElement","App","showModule","TitleBar_TitleBar","components_ContentDisplay","components_NavMenu_NavMenu","Boolean","location","hostname","match","WebFont","load","google","families","reducers","combineReducers","arguments","undefined","refreshPostsReducer","sourceCreateModule","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxPromise","logger","ReactDOM","render","es","store","createStore","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","bodyFlex","signature","book-cta","border-bottom"],"mappings":"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","file":"static/js/main.2df8f9d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createForm\":\"SourceCreate_createForm__2KrBN\",\"openForm\":\"SourceCreate_openForm__38EM7\",\"labelTitle\":\"SourceCreate_labelTitle__3LPuJ\",\"createFields\":\"SourceCreate_createFields__8F5Ek\",\"center\":\"SourceCreate_center__2Pt9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionWrapper\":\"SourceCard_sectionWrapper__3-amw\",\"section\":\"SourceCard_section__hWmMe\",\"nameWrapper\":\"SourceCard_nameWrapper__1DyWm\",\"name\":\"SourceCard_name__327TD\",\"url\":\"SourceCard_url__59iZD\",\"buttonsWrapper\":\"SourceCard_buttonsWrapper__2dmZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsletterHead\":\"TitleBar_newsletterHead__Zupct\",\"title\":\"TitleBar_title__3MWB3\",\"timeStamp\":\"TitleBar_timeStamp__wN8_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__1wrJh\",\"errorTitle\":\"Error_errorTitle__31zwY\",\"error\":\"Error_error__2k7aI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SourceButton_button__1A0IB\",\"buttonDims\":\"SourceButton_buttonDims__2zegr\",\"addSource\":\"SourceButton_addSource__3b6GP\",\"refreshSource\":\"SourceButton_refreshSource__L3OYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SourcesList_section__1Dwss\",\"message\":\"SourcesList_message__Uxl3r\",\"buttonsWrapper\":\"SourcesList_buttonsWrapper__3m4Oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"NavMenuElement_element__3XeYF\",\"button\":\"NavMenuElement_button__1qALZ\",\"buttonArrow\":\"NavMenuElement_buttonArrow__1nY71\",\"buttonArrowOpen\":\"NavMenuElement_buttonArrowOpen__vyjhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostButton_button__3gCuo\",\"on\":\"PostButton_on__dfo7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavMenu_menu__1haFk\",\"menuOpen\":\"NavMenu_menuOpen__3CT9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostCardList_content__15L4_\",\"contentFlex\":\"PostCardList_contentFlex__2hHWd\"};","const currentTimestamp = props => {\n  var hours = 0;\n  var d = new Date(),\n    minutes =\n      d.getMinutes().toString().length === 1\n        ? '0' + d.getMinutes()\n        : d.getMinutes(),\n    ampm = d.getHours() >= 12 ? 'pm' : 'am',\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ],\n    days = [\n      'Sunday',\n      'Monday',\n      'Tueday',\n      'Wedday',\n      'Thuday',\n      'Friday',\n      'Saturday'\n    ];\n  if (d.getHours() === 0) {\n    hours = 12;\n  } else if (d.getHours() > 12) {\n    hours = d.getHours() - 12;\n  } else {\n    hours = d.getHours();\n  }\n  return (\n    days[d.getDay()] +\n    ', ' +\n    months[d.getMonth()] +\n    ' ' +\n    d.getDate() +\n    ', ' +\n    d.getFullYear() +\n    ' | ' +\n    hours +\n    ':' +\n    minutes +\n    ampm\n  );\n};\n\nexport default currentTimestamp;\n","import React from 'react';\n\nimport DateTime from './DateTime';\nimport styles from './TitleBar.module.scss';\n\nexport default class TitleBar extends React.Component {\n  showHome = () => {\n    this.props.toggle('Home');\n  };\n  render() {\n    return (\n      <header className={styles.newsletterHead}>\n        <div className={styles.title} onClick={this.showHome} id=\"title\">\n          The Newsletter\n        </div>\n        <time className={styles.timeStamp}>\n          <DateTime />\n        </time>\n      </header>\n    );\n  }\n}\n","const postUrl =\n  process.env.REACT_APP_API_URL ||\n  'https://the-newsletter-app-back.herokuapp.com/api';\n\nexport function setPosts() {\n  const promise = fetch(`${postUrl}/list`)\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'SET_POSTS',\n    payload: promise\n  };\n}\nexport function updatePost(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'UPDATE_POST',\n    payload: promise\n  };\n}\nexport function updateSource(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'UPDATE_SOURCE',\n    payload: promise\n  };\n}\nexport function refreshPosts() {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: {\n        action: ['post', 'refresh']\n      }\n    })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'REFRESH_POSTS',\n    payload: promise\n  };\n}\nexport function addSource(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'ADD_SOURCE',\n    payload: promise\n  };\n}\nexport function deleteSource(query) {\n  if (query.action && query.id) {\n    const promise = fetch(postUrl, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ query })\n    })\n      .then(r => r)\n      // r.json())\n      .catch(e => {\n        return e;\n      });\n\n    return {\n      type: 'DELETE_SOURCE',\n      payload: promise\n    };\n  } else {\n    return 'Missing action and/or id';\n  }\n}\n\nexport function setSources() {\n  const promise = fetch(`${postUrl}/sources`).then(r => r.json());\n  return {\n    type: 'SET_SOURCES',\n    payload: promise\n  };\n}\n\nexport function selectPost(postId) {\n  const promise = fetch(`${postUrl}/post/${postId}`).then(r => r.json());\n  return {\n    type: 'SELECT_POST',\n    payload: promise\n  };\n}\n\nexport function sourceCreateModule(status) {\n  return {\n    type: 'SHOW_MODULE',\n    payload: status\n  };\n}\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { updatePost } from '../../../actions';\n\nimport style from './PostButton.module.scss';\n\nclass PostButton extends React.Component {\n  updatePost = () => {\n    let action = '';\n    switch (this.props.type) {\n      case 'star':\n        action = ['post', 'update'];\n        break;\n      default:\n        action = ['post', 'delete'];\n        break;\n    }\n    let fields = {};\n    fields[`${this.props.type}`] = !this.props.value;\n    const query = { id: this.props.postId, action: action, fields: fields };\n    this.props.updatePost(query);\n    if (this.props.toggle) {\n      this.props.toggle('Home');\n    }\n  };\n\n  render() {\n    let button = '⊗';\n    let buttonStyle = style.button;\n    switch (this.props.type) {\n      case 'star':\n        button = '★';\n        if (this.props.value) {\n          buttonStyle = style.on;\n        }\n        break;\n      default:\n        break;\n    }\n    return (\n      <button className={buttonStyle} onClick={this.updatePost}>\n        {button}\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePost: updatePost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    updatePost: state.updatePost\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostButton);\n","const months = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nconst daysOfWeek = {\n  1: 'Sun',\n  2: 'Mon',\n  3: 'Tue',\n  4: 'Wed',\n  5: 'Thu',\n  6: 'Fri',\n  7: 'Sat'\n};\n\nconst dateTime = props => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from 'react';\n\nimport PostButton from './PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostCard.module.scss';\n\nclass PostCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = () => {\n    this.props.selector(this.props.post._id);\n  };\n\n  render() {\n    const text = `${this.props.post.text.replace(/<(?:.|\\n)*?>/gm, ' ')}...`;\n    let bodyClass = '';\n    if (this.props.post.read) {\n      bodyClass = style.bodyRead;\n    } else {\n      bodyClass = style.body;\n    }\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    return (\n      <section className={bodyClass} key={this.props.post._id}>\n        <header className={style.title} onClick={this.handleClick}>\n          {this.props.post.title}\n        </header>\n        <section className={style.secondLine}>\n          <div className={style.source}>@ {this.props.post.source}</div>\n          <PostButton\n            type=\"star\"\n            value={this.props.post.star}\n            postId={this.props.post._id}\n          />\n        </section>\n        <section\n          className={style.text}\n          onClick={this.handleClick}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <footer className={style.statusLine}>\n          <div>{publishedDate}</div>\n          <div>~ {this.props.post.readTime} mins</div>\n        </footer>\n        <div className={style.divider} />\n      </section>\n    );\n  }\n}\n\nexport default PostCard;\n","import React from 'react';\n\nimport style from './Error.module.scss';\n\nconst error = props => {\n  return (\n    <main className={style.errorWrapper}>\n      <p className={style.errorTitle}>ERROR</p>\n      <p className={style.error}>{props.message}</p>\n    </main>\n  );\n};\n\nexport default error;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setPosts } from '../../actions';\nimport { selectPost } from '../../actions';\n\nimport PostCard from './PostCard';\nimport style from './PostCardList.module.scss';\nimport Error from '../../components/Error/Error';\n\nclass PostCardList extends React.Component {\n  componentWillMount() {\n    this.fetchMessages();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchMessages, 5000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchMessages = () => {\n    this.props.setPosts().then(data => {});\n  };\n  selectPostToShow = postId => {\n    this.props.selectPost(postId).then(data => {\n      this.props.showPost(data);\n    });\n  };\n  render() {\n    const message = this.props.posts.message;\n    if (message) {\n      return <Error message={message} />;\n    }\n    return (\n      <div className={style.content}>\n        {this.props.posts.map(post => {\n          return (\n            <PostCard\n              selector={this.selectPostToShow}\n              post={post}\n              key={post._id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setPosts, selectPost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCardList);\n","import React from 'react';\n\nimport style from './SourceButton.module.scss';\n\nclass SourceButton extends React.Component {\n  handleClick = () => {\n    if (this.props.type === 'add') this.props.show('');\n    if (this.props.type === 'delete') this.props.sourceDelete('');\n    if (this.props.type === 'refresh') this.props.refresh('');\n    if (this.props.type === 'edit') this.props.toggleEdit('');\n  };\n  render() {\n    let button = 'Add Source';\n    let buttonStyle = style.button;\n    switch (this.props.type) {\n      case 'edit':\n        button = '✎';\n        break;\n      case 'refresh':\n        button = 'Refresh';\n        buttonStyle = style.refreshSource;\n        break;\n      case 'add':\n        buttonStyle = style.addSource;\n        break;\n      default:\n        button = '⌦';\n    }\n    return (\n      <button className={buttonStyle} onClick={this.handleClick}>\n        {button}\n      </button>\n    );\n  }\n}\n\nexport default SourceButton;\n","import React from 'react';\n\nimport style from './SourceCreate.module.scss';\n\nclass SourceCreate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.source) {\n      this.state = {\n        name: props.source.name,\n        url: props.source.url,\n        home: props.source.home\n      };\n    } else {\n      this.state = {\n        name: '',\n        url: '',\n        home: ''\n      };\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let change = {};\n    let field = event.target.name;\n    change[field] = event.target.value;\n    this.setState(change);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const values = {\n      name: event.target[0].value,\n      url: event.target[1].value,\n      home: event.target[2].value\n    };\n    if (this.props.mode === 'edit') {\n      const newValues =\n        values.name === this.props.source.name &&\n        values.url === this.props.source.url &&\n        values.home === this.props.source.home;\n      if (!newValues) {\n        const query = { id: this.props.source._id, values: values };\n        this.props.toggleEdit('');\n        this.props.updateSource(query);\n      }\n    } else if (this.props.mode === 'create') {\n      this.props.toggle();\n      this.props.create(values);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <form onSubmit={this.handleSubmit} className={style.createForm}>\n        <label>\n          <div className={style.labelTitle}>Name</div>\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>URL</div>\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>Homepage</div>\n          <input\n            type=\"text\"\n            name=\"home\"\n            value={this.state.home}\n            onChange={this.handleChange}\n          />\n        </label>\n        <div className={style.center}>\n          <button\n            className={style.submit}\n            as=\"input\"\n            type=\"submit\"\n            value=\"Submit\"\n          >\n            Create\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SourceCreate;\n","import React from 'react';\n\nimport SourceButton from './SourceButton/SourceButton';\nimport SourceCreate from '../../containers/Sources/SourceCreate/SourceCreate';\nimport style from './SourceCard.module.scss';\n\nclass SourceCard extends React.Component {\n  sourceDelete = () => {\n    this.props.sourceDelete(this.props.source._id);\n  };\n  render() {\n    return (\n      <section className={style.sectionWrapper}>\n        <div className={style.section}>\n          <section className={style.nameWrapper}>\n            <p onClick={this.goHome} className={style.name}>\n              {this.props.source.name}\n            </p>\n            <p className={style.url}>{this.props.source.url}</p>\n          </section>\n          <section className={style.buttonsWrapper}>\n            <SourceButton type=\"edit\" toggleEdit={this.props.toggleEdit} />\n            <SourceButton type=\"delete\" sourceDelete={this.sourceDelete} />\n          </section>\n        </div>\n        {this.props.showEdit ? (\n          <SourceCreate\n            mode=\"edit\"\n            toggleEdit={this.props.toggleEdit}\n            source={this.props.source}\n            updateSource={this.props.updateSource}\n          />\n        ) : null}\n      </section>\n    );\n  }\n}\n\nexport default SourceCard;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setSources } from '../../actions';\nimport { addSource } from '../../actions';\nimport { deleteSource } from '../../actions';\nimport { refreshPosts } from '../../actions';\nimport { updateSource } from '../../actions';\n\nimport SourceCard from '../../components/Sources/SourceCard';\nimport SourceButton from '../../components/Sources/SourceButton/SourceButton';\nimport SourceCreate from './SourceCreate/SourceCreate';\nimport style from './SourcesList.module.scss';\n\nclass SourcesList extends React.Component {\n  state = {\n    showAddSource: false,\n    showEditSource: false,\n    message: ''\n  };\n\n  toggleAddSource = () => {\n    this.setState(state => ({ showAddSource: !this.state.showAddSource }));\n  };\n  toggleEditSource = e => {\n    this.setState(state => ({ showEditSource: !this.state.showEditSource }));\n  };\n\n  changeMessage = message => {\n    this.setState({ message: message });\n    setTimeout(this.clearMessage, 3000);\n  };\n\n  componentWillMount() {\n    this.fetchSources();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchSources, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchSources = () => {\n    this.props.setSources();\n  };\n\n  clearMessage = () => {\n    this.setState({ message: '' });\n  };\n\n  createSource = fields => {\n    if (fields.name === '' || fields.home === '' || fields.url === '')\n      this.changeMessage('Not enough info. Source not created.');\n    const request = { action: ['source', 'create'], fields };\n    this.props.addSource(request);\n  };\n\n  updateSource = fields => {\n    if (\n      fields.values.name === '' ||\n      fields.values.home === '' ||\n      fields.values.url === '' ||\n      fields.values.id === ''\n    )\n      this.changeMessage('Not enough info. Source not created.');\n    const request = {\n      action: ['source', 'update'],\n      id: fields.id,\n      fields: fields.values\n    };\n    this.props.updateSource(request);\n  };\n\n  sourceDelete = id => {\n    const request = { action: ['source', 'delete'], id: id };\n    this.props.deleteSource(request);\n    this.fetchSources();\n  };\n\n  handleRefreshPosts = () => {\n    this.props.refreshPosts();\n  };\n\n  render() {\n    return (\n      <section className={style.section}>\n        <div className={style.buttonsWrapper}>\n          {this.props.sources.length > 0 ? (\n            <SourceButton\n              type=\"refresh\"\n              refresh={this.handleRefreshPosts}\n              name=\"Refresh\"\n            />\n          ) : null}\n          <SourceButton\n            type=\"add\"\n            show={this.toggleAddSource}\n            name=\"Add Source\"\n          />\n        </div>\n        {this.state.showAddSource ? (\n          <SourceCreate\n            mode=\"create\"\n            create={this.createSource}\n            toggle={this.toggleAddSource}\n          />\n        ) : null}\n        {this.state.message === '' ? null : (\n          <div className={style.message}>{this.state.message}</div>\n        )}\n        {this.props.sources.map(source => {\n          return (\n            <SourceCard\n              source={source}\n              key={source._id}\n              sourceDelete={this.sourceDelete}\n              showEdit={this.state.showEditSource}\n              toggleEdit={this.toggleEditSource}\n              updateSource={this.updateSource}\n            />\n          );\n        })}\n      </section>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { setSources, addSource, deleteSource, refreshPosts, updateSource },\n    dispatch\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    sources: state.sources,\n    addSource: state.addSource,\n    deleteSource: state.deleteSource,\n    refreshPosts: refreshPosts,\n    updateSource: updateSource\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SourcesList);\n","import React from 'react';\n\nimport PostButton from '../../containers/Posts/PostButton/PostButton';\nimport dateTime from '../../modules/date_time';\nimport style from './PostShow.module.scss';\n\nclass PostShow extends React.Component {\n  handleClick = () => {\n    window.open(this.props.post.url, '_blank');\n  };\n\n  componentDidMount = () => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    let author = '';\n    if (!this.props.post.author) {\n      author = '';\n    } else {\n      author = `by ${this.props.post.author}`;\n    }\n    const publishedDate = dateTime(new Date(this.props.post.published));\n    const parsedDate = dateTime(new Date(this.props.post.parsed));\n    return (\n      <article className={style.body}>\n        <header className={style.title} onClick={this.handleClick}>\n          {this.props.post.title}\n        </header>\n        <div className={style.secondLine}>\n          <div className={style.author}>{author}</div>\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.props.post.star}\n              postId={this.props.post._id}\n            />\n            <PostButton\n              type=\"delete\"\n              postId={this.props.post._id}\n              toggle={this.props.toggle}\n            />\n          </div>\n        </div>\n        <section\n          className={style.text}\n          dangerouslySetInnerHTML={{ __html: this.props.post.text }}\n        />\n        <div className={style.divider} />\n        <footer className={style.statusLine}>\n          <div>published: {publishedDate}</div>\n          <div>parsed: {parsedDate}</div>\n          <div>~ {this.props.post.pages} pages</div>\n        </footer>\n      </article>\n    );\n  }\n}\n\nexport default PostShow;\n","import React from 'react';\n\nimport PostCardList from '../containers/Posts/PostCardList';\nimport SourcesList from '../containers/Sources/SourcesList';\nimport PostShow from './Posts/PostShow';\n\nclass ContentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {}\n    };\n  }\n\n  setPostToShow = post => {\n    this.setState({ post: post.payload });\n    this.props.toggle('show');\n  };\n\n  render() {\n    switch (this.props.show) {\n      case 'Home':\n        return <PostCardList showPost={this.setPostToShow} />;\n      case 'show':\n        return <PostShow post={this.state.post} toggle={this.props.toggle} />;\n      case 'Sources':\n        return <SourcesList />;\n      default:\n        return <PostCardList />;\n    }\n  }\n}\n\nexport default ContentDisplay;\n","import React from 'react';\n\nimport style from './NavMenuElement.module.scss';\n\nclass NavMenuElement extends React.Component {\n  handleClick = () => {\n    if (this.props.name !== 'toggle') {\n      this.props.options.menuOpen('');\n      this.props.options.show(this.props.name);\n    } else {\n      this.props.options.menuOpen('');\n    }\n  };\n\n  render() {\n    let elementStyle = style.button;\n    let button = this.props.name;\n    if (button === 'toggle') {\n      button = '⋮';\n      if (this.props.options.menuStatus) {\n        elementStyle = style.buttonArrowOpen;\n      } else {\n        elementStyle = style.buttonArrow;\n      }\n    }\n    return (\n      <div onClick={this.handleClick} className={elementStyle}>\n        {button}\n      </div>\n    );\n  }\n}\n\nexport default NavMenuElement;\n","import React from 'react';\n\nimport NavMenuElement from './NavMenuElement';\nimport style from './NavMenu.module.scss';\n\nclass NavMenu extends React.Component {\n  render() {\n    let menuStyle = style.menu;\n    if (this.props.options.menuStatus) menuStyle = style.menuOpen;\n    return (\n      <nav className={menuStyle}>\n        <NavMenuElement options={this.props.options} name=\"toggle\" />\n        <NavMenuElement options={this.props.options} name=\"Home\" />\n        <NavMenuElement options={this.props.options} name=\"Sources\" />\n      </nav>\n    );\n  }\n}\n\nexport default NavMenu;\n","import React from 'react';\n\nimport TitleBar from '../TitleBar/TitleBar';\nimport ContentDisplay from '../ContentDisplay';\nimport NavMenu from '../NavMenu/NavMenu';\n\nclass App extends React.Component {\n  state = {\n    module: 'Home',\n    menuOpen: false\n  };\n  showModule = module => {\n    this.setState(state => ({ module: module }));\n  };\n  menuOpen = () => {\n    this.setState({\n      menuOpen: !this.state.menuOpen\n    });\n  };\n\n  render() {\n    const options = {\n      show: this.showModule,\n      menuOpen: this.menuOpen,\n      menuStatus: this.state.menuOpen\n    };\n    return (\n      <main>\n        <TitleBar toggle={this.showModule} />\n        <ContentDisplay show={this.state.module} toggle={this.showModule} />\n        <NavMenu options={options} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\n// reducers\nimport postsReducer from './reducers/posts_reducer';\nimport sourcesReducer from './reducers/sources_reducer';\nimport addSourceReducer from './reducers/add_source_reducer';\nimport updatePostReducer from './reducers/update_post_reducer';\nimport updateSourceReducer from './reducers/update_source_reducer';\nimport refreshPostsReducer from './reducers/refresh_posts_reducer';\nimport selectPostReducer from './reducers/select_post_reducer';\nimport deleteSourceReducer from './reducers/delete_source_reducer';\nimport sourceCreateModuleReducer from './reducers/source_create_module_reducer.js';\n\nimport WebFont from 'webfontloader';\n\n// load components\nimport App from './components/App/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: ['Aleo:300,300i,400,400i,700', 'IBM Plex Mono:300,400']\n  }\n});\n\nconst initialState = {\n  posts: [],\n  sources: [],\n  addSource: '',\n  updatePost: '',\n  selectPost: '',\n  sourceCreateModule: true,\n  deleteSource: '',\n  refreshPostsReducer: ''\n};\n\n// Define reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  sources: sourcesReducer,\n  addSource: addSourceReducer,\n  selectPost: selectPostReducer,\n  updatePost: updatePostReducer,\n  updateSource: updateSourceReducer,\n  deleteSource: deleteSourceReducer,\n  refreshPostsReducer: refreshPostsReducer,\n  sourceCreateModule: sourceCreateModuleReducer\n});\n// Add logger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(reduxPromise, logger));\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'ADD_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'DELETE_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SHOW_MODULE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostCard_body__3hbvz\",\"bodyFlex\":\"PostCard_bodyFlex__1TYUE\",\"bodyRead\":\"PostCard_bodyRead__1JMP2\",\"title\":\"PostCard_title__131Au\",\"secondLine\":\"PostCard_secondLine__KD5pA\",\"source\":\"PostCard_source__3-ict\",\"text\":\"PostCard_text__2kRll\",\"statusLine\":\"PostCard_statusLine__1d_h8\",\"divider\":\"PostCard_divider__3wj7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostShow_body__1NQ_n\",\"title\":\"PostShow_title__2HfCj\",\"secondLine\":\"PostShow_secondLine__9dJW5\",\"author\":\"PostShow_author__1S4ap\",\"buttonsWrapper\":\"PostShow_buttonsWrapper__10ox5\",\"text\":\"PostShow_text__27vjt\",\"signature\":\"PostShow_signature__22jd-\",\"book-cta\":\"PostShow_book-cta__3WUf0\",\"border-bottom\":\"PostShow_border-bottom__OPWyx\",\"divider\":\"PostShow_divider__zhco3\",\"statusLine\":\"PostShow_statusLine__3higE\"};"],"sourceRoot":""}